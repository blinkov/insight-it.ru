<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Insight IT</title><link>https://www.insight-it.ru/</link><description></description><atom:link href="https://www.insight-it.ru/tag/erlang-solutions/feed/index.xml" rel="self"></atom:link><lastBuildDate>Sat, 23 Jun 2012 02:40:00 +0400</lastBuildDate><item><title>Moscow Erlang Factory Lite 2012</title><link>https://www.insight-it.ru//event/2012/moscow-erlang-factory-lite-2012/</link><description>&lt;p&gt;Давненько я не выбирался на IT-мероприятия, так что продолжу традицию
делиться впечатлениями. Как следует из заголовка она была исключительно
про &lt;a href="/tag/erlang/"&gt;Erlang&lt;/a&gt;, причем в самых разных его проявлениях.
Недавно я написал пару статей про него, можно найти по соответствующему
&lt;a href="/tag/erlang/"&gt;тегу&lt;/a&gt;. Конференция была всего на пол дня, так что пост
получится явно небольшой - много времени не займет ;)&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id="organizatsiia"&gt;Организация&lt;/h2&gt;
&lt;p&gt;Мероприятие проводили совместно &lt;strong&gt;Erlang Solutions&lt;/strong&gt;&amp;nbsp;(международная
организация, которая регулярно проводит подобные Erlang-мероприятия,
сертификации и т.п.) и &lt;strong&gt;Яндекс&lt;/strong&gt;. Проходило все в двух шагах от офиса
Яндекса, плюс они же занимались собственно всеми организационными
вопросами. Единственный представитель Erlang Solutions видимо не знал
что в Москве бывают пробки и сильно опоздал, к слову у меня на телефоне
его фотка нашлась, заодно можно оценить масштабы мероприятия (весь
единственный зал):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Фотография с Erlang Factory Lite" class="responsive-img" src="https://www.insight-it.ru/images/erlang-factory-lite-photo.jpg" title="Фотография с Erlang Factory Lite"/&gt;&lt;/p&gt;
&lt;p&gt;Конференция по задумке должна была быть полностью на английском, без
перевода, так как якобы трансляцию могли смотреть и не русские. Но по
факту докладчики были к этому не готовы, у примерно трети докладчиков
был английский с кошмарным акцентом, не говоря уже о длинных паузах
"э-э-э" пока вспоминались подходящие слова.&lt;/p&gt;
&lt;p&gt;Еще из косяков к началу конференции никто не удосужился проверить звук и
удаленный&amp;nbsp;переключатель&amp;nbsp;слайдов.&lt;/p&gt;
&lt;p&gt;А в остальном все ок, простенько и со вкусом. Едем дальше.&lt;/p&gt;
&lt;h2 id="doklady"&gt;Доклады&lt;/h2&gt;
&lt;h3 id="iandeks"&gt;Яндекс&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;В Яндексе всего три Erlang-программиста, кажется все присутствовали&lt;/li&gt;
&lt;li&gt;Используют свой форк &lt;a href="/tag/ejabberd/"&gt;ejabberd&lt;/a&gt;&amp;nbsp;примерно пятилетней
    давности для их мессенджера и пуш-уведомлений:&lt;ul&gt;
&lt;li&gt;С момента своего создания изменения из основной ветки развития
    не мерджились и обратно выкладываться в opensource не собираются
    из-за "сильной интеграции с другими сервисами Яндекса"&lt;/li&gt;
&lt;li&gt;Для хранения постоянных данных используют
    &lt;a href="/tag/mongodb/"&gt;MongoDB&lt;/a&gt;, на вопрос почему именно докладчик так
    честно ответил "не знаю"&lt;/li&gt;
&lt;li&gt;Основная часть доклада ушла на рассказ об оптимизациях внутри
    самого ejabberd, реализованных в их форке, в частности:&lt;ul&gt;
&lt;li&gt;Добавили проверку на то, жив ли процесс перед тем как
    отправлять ему сообщение, изначально ejabberd в этом плане
    был более оптимистичен и их это по непонятным причинам не
    устроило.&lt;/li&gt;
&lt;li&gt;Уменьшили объем используемой оперативной памяти за счет
    "ленивой подгрузки" части данных, которые редко
    используются. Из зала, кстати, кто-то добавил что у
    аналогичного форка от Erlang Solutions повсеместное
    &amp;nbsp;использование бинарных строк вместо обычных дало очень
    ощутимую экономию оперативной памяти.&lt;/li&gt;
&lt;li&gt;И, кажется, объединили принимающий и отправляющий сообщения
    процессы в один.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;На вопрос о цифрах выдали только порядки: несколько десятков
    серверов обслуживают несколько сотен тысяч пользователей онлайн.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fedora-project_1"&gt;Fedora Project&lt;/h2&gt;
&lt;p&gt;Обсуждался вопрос сильного "отставания" доступных по-умолчанию в
&lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;-дистрибутивах версий Erlang, да и не только Erlang,
от последней стабильной. Я думаю очень актуальный вопрос для тех, кто
занимается продажей коммерческого софта для Linux, или для тех, кто
занимается сборкой и поддержкой пакетов для opensource проектов.&lt;/p&gt;
&lt;p&gt;Erlang сделан так, что подход &lt;em&gt;"все свое ношу с собой"&lt;/em&gt;, &lt;strong&gt;существенно&lt;/strong&gt;
проще и удобнее, чем управление зависимостями. Хотя докладчик приводил
пример, что &lt;a href="/tag/couchdb/"&gt;CouchDB&lt;/a&gt; как раз использует альтернативный
подход требования точных версий зависимостей и у них в Fedora были
большие заморочки с тем, что они обновили
&lt;a href="/tag/javascript/"&gt;JavaScript&lt;/a&gt;-движок на одну версию выше, чем от
которого зависела последняя версия CouchDB. Я так и не уловил как в
итоге эту ситуацию решили, наверное пришлось оставить в репозитории две
версии зависимости или дождаться и&amp;nbsp;обновления&amp;nbsp;CouchDB.&lt;/p&gt;
&lt;h2 id="mochi-media"&gt;Mochi Media&lt;/h2&gt;
&lt;p&gt;Вместо рассказа о &lt;strong&gt;mochiweb&lt;/strong&gt; речь шла о различных вариантах как можно
реализовать случайный выбор элемента из списка и их слабых и сильных
сторонах. Причем для примера использовался не реальный проект, где они
подобным занимаются (баннерная сеть), а IRC-бот&amp;nbsp;написанный&amp;nbsp;для
развлечения. Да и к Erlang практически никакого отношения, единственной
что узнал полезного: стандартный модуль &lt;strong&gt;random&lt;/strong&gt; написан по не самому
удачному алгоритму, созданному в начале 80-х, и если это сколько-либо
критично для приложения - лучше вместо него использовать &lt;strong&gt;crypto&lt;/strong&gt; или
сторонние библиотеки.&lt;/p&gt;
&lt;h3 id="maks-lapshin"&gt;Макс Лапшин&lt;/h3&gt;
&lt;p&gt;Докладчик является, пожалуй, самым активным участником российского
Erlang-сообщества, известен в узких кругах как автор &lt;strong&gt;Erlyvideo&lt;/strong&gt;,
opensource решения для потокового вещания видео. Рассказывал про
какой-то другой проект, в частности о парсере протокола FIX,
использующегося на фондовых биржах и отличающегося огромной
спецификацией с более чем сотней типов сообщений. Основная идея доклада:
если нужно написать много однотипного кода, его лучше сгенерировать, чем
копипастить.&lt;/p&gt;
&lt;p&gt;К счастью, авторы этого протокола заботятся о разработчиках и публикуют
спецификацию в виде &lt;a href="/tag/xml/"&gt;XML&lt;/a&gt;-файла, который Макс предлагает
парсить и генерировать на его основе необходимые .erl файлы, не дерево
синтаксиса, а прямо текстовые .erl файлы. В конкретно этом случае ему
нужно было из proplist-ов создавать record'ы, а сам парсинг сообщений он
решил написать на &lt;a href="/tag/c/"&gt;C&lt;/a&gt;.&amp;nbsp;Хотя мне кажется эту конвертацию тоже
можно было бы убрать в C.&lt;/p&gt;
&lt;h3 id="aleks-gunin"&gt;Алекс Гунин&lt;/h3&gt;
&lt;p&gt;Это был единственный доклад на 80% на русском, так как попытка начать
его на английском закончилась полным провалом. Хотя заголовок у доклада
был самый, пожалуй, интересный - &lt;em&gt;"как сделать Erlang по-настоящему
распределенным и отказоустойчивым"&lt;/em&gt;. Основная идея была использовать
часть распределенной СУБД &lt;a href="/tag/riak/"&gt;Riak&lt;/a&gt;, отвечающую за
распределение и поиск данных в кластере &lt;em&gt;(Riak Core)&lt;/em&gt;, для маршрутизации
простых Erlang сообщений и &amp;nbsp;по аналогии с несколькими репликами данных
запускать несколько копий одинаковых процессов. Для реализации этой
затеи они написали совместимые со стандартными модули gen_server2,
gen_fsm2 и т.п. &lt;em&gt;(что, кстати, плохая практика - из-за таких названий
можно легко столкнуться с конфликтами в пространстве имен модулей,
например в &lt;a href="/tag/rabbitmq/"&gt;RabbitMQ&lt;/a&gt; и каком-то еще популярном проекте
тоже есть gen_server2, как-то сталкивался)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Задумка явно толковая и думаю для многих систем актуальная, но
подробностей очень мало, плюс докладчик очень смутно излагал свои мысли
даже на русском. Он не сказал для какой компании он все это
разрабатывал, но пообещал выложить саму систему маршрутизации сообщений
в opensource. Когда и где - не ясно.&lt;/p&gt;
&lt;h3 id="lev-valkin"&gt;Лев Валкин&lt;/h3&gt;
&lt;p&gt;Это был последний доклад, где я присутствовал, в оставшейся секции из
трех докладов мне совсем ничего не приглянулось, но зато этот мне больше
всего понравился. Думаю в первую очередь так как Лев косвенно
пропагандировал&amp;nbsp;очень близкую мне тему использования &lt;strong&gt;Erlang&lt;/strong&gt; для
создания &lt;a href="https://www.insight-it.ru/interactive/"&gt;интерактивных веб-сайтов&lt;/a&gt;. Большинство докладов были все же про другие предметные области. Раньше про его компанию &lt;strong&gt;Echo&lt;/strong&gt; ничего не слышал, но список клиентов на главной у них солидный, надо будет почитать на досуге.&lt;/p&gt;
&lt;p&gt;Сам доклад был про выбор и оценку языков программирования и
связанных&amp;nbsp;платформ по относительно объективным критериям (сообщество,
ассортимент opensource библиотек, возможности в тестировании,
интроспекции и дебаге, плюшки вроде горячей замены кода и пр.). Правда в
итоге все свелось к тому, что главное, чтобы разработчикам &lt;em&gt;нравилось
что они делают&lt;/em&gt; - иначе как бы не была объективно&amp;nbsp;хороша та или иная
технология все равно получится черти что :)&lt;/p&gt;
&lt;p&gt;Изначально Лев планировал доклад на тему &lt;strong&gt;Erlang vs node.js&lt;/strong&gt;, но её
забраковали организаторы, видимо за холиварность. В итоге она все же
местами затрагивалась, да и вопросы после доклада в основном были по
ней.&lt;/p&gt;
&lt;p&gt;Основные моменты:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Повторное использование кода между серверным JavaScript и
    клиентским - в большинстве случаев &lt;strong&gt;миф&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Легко найти серверного node.js-разработчика, так как все и так уже
    знают JavaScript &amp;nbsp;- тоже &lt;strong&gt;миф&lt;/strong&gt;, клиентская разработка
    концептуально сильно отличается от серверной, намного больше
    node.js-разработчиков приходит с других серверных платформ, а не с
    клиентского JavaScript.&lt;/li&gt;
&lt;li&gt;node.js хоть и сильно проигрывает Erlang по ряду объективных
    показателей применительно к веб разработке, благодаря своей
    популярности именно среде молодых веб-разработчиков (во многом
    благодаря вышеизложенным мифам) сильно угрожает популяризации Erlang
    в этой же самой среде.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Свое мнение про JavaScript в целом и node.js в частности оставлю за
кадром, недавно в одном из постов высказывался уже на эту тему.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Sat, 23 Jun 2012 02:40:00 +0400</pubDate><guid>tag:www.insight-it.ru,2012-06-23:event/2012/moscow-erlang-factory-lite-2012/</guid><category>ejabberd</category><category>Erlang</category><category>Erlang Solutions</category><category>конференции</category><category>мероприятия</category><category>Яндекс</category></item></channel></rss>