<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Insight IT</title><link>https://www.insight-it.ru/</link><description></description><atom:link href="https://www.insight-it.ru/tag/markup/feed/index.xml" rel="self"></atom:link><lastBuildDate>Fri, 25 Feb 2011 00:02:00 +0300</lastBuildDate><item><title>Как нужно верстать?</title><link>https://www.insight-it.ru//frontend/2011/kak-nuzhno-verstat/</link><description>&lt;p&gt;По одному из проектов меня попросили написать бумажку, которую можно
давать верстальщикам-фрилансерам, чтобы вкратце объяснить, чего от них
хотят. Я на самом деле не считаю себя особо большим спецом по верстке,
так что получилось довольно сумбурно и местами спорно (иногда
проскальзывает специфика проекта, но думаю это некритично). Результат
решил опубликовать в блоге, так как возможно многим она может показаться
полезной, плюс очень хотелось бы послушать критику и дополнения в
комментариях. Источники информации - различные статьи и блоги + личный
опыт. Ссылки приводить не буду, так как подробная информация по любой из
тем легко гуглится.&lt;/p&gt;
&lt;!--more--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;HTML и CSS должны быть &lt;strong&gt;читаемыми&lt;/strong&gt; (все равно потом все ужимаем):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML должен быть иерархическим, открывающие теги с новой строки
    (кроме случаев с), отступы 4 пробела&lt;/li&gt;
&lt;li&gt;CSS желательно не свернутые в строчку, а по одной директиве на
    строку, тоже с отступами по 4 пробела&lt;/li&gt;
&lt;li&gt;Можно сразу
    использовать&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/dca1748a/" rel="nofollow" target="_blank" title="http://sass-lang.com/"&gt;SASS&lt;/a&gt; -
    сильно упрощает всем жизнь&lt;/li&gt;
&lt;li&gt;Идентификаторы классов должны быть человекочитабельмыми
    английскими словами и фразами&lt;/li&gt;
&lt;li&gt;Очень желательно&amp;nbsp;&lt;em&gt;не использование&lt;/em&gt; в названиях классов и
    идентификаторов ключевых слов из HTML/CSS/JS/jQuery&lt;/li&gt;
&lt;li&gt;Очень желательно, чтобы идентификаторы и классы&amp;nbsp;&lt;em&gt;не были&lt;/em&gt;
    префиксными (ни одно названия не является началом или концом
    другого, например &lt;code&gt;.icon&lt;/code&gt; и &lt;code&gt;.icon_small&lt;/code&gt;) - это позволяет
    сократить их все до 1-2 символов на этапе постобработки&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DOCTYPE&lt;/code&gt; предпочтителен HTML5, но в крайнем случае можно и XHTML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Кодировка:&amp;nbsp;&lt;em&gt;обязательно&lt;/em&gt; &lt;strong&gt;UTF-8&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Валидность&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/e3e768b3/" rel="nofollow" target="_blank" title="http://validator.w3.org/"&gt;http://validator.w3.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/5ff07096/" rel="nofollow" target="_blank" title="http://jigsaw.w3.org/css-validator/"&gt;http://jigsaw.w3.org/css-validator/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WCAG:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/90682485/" rel="nofollow" target="_blank" title="http://www.cynthiasays.com/"&gt;http://www.cynthiasays.com/&lt;/a&gt;
    и&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/b17bf654/" rel="nofollow" target="_blank" title="http://www.w3.org/WAI/WCAG20/quickref/"&gt;http://www.w3.org/WAI/WCAG20/quickref/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Соответствие макету&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Проверка:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/26bbcbb0/" rel="nofollow" target="_blank" title="https://addons.mozilla.org/ru/firefox/addon/pixel-perfect/"&gt;https://addons.mozilla.org/ru/firefox/addon/pixel-perfect/&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/6d40d8b1/" rel="nofollow" target="_blank" title="https://github.com/aishek/modulargrid"&gt;https://github.com/aishek/modulargrid&lt;/a&gt;
    и &lt;a href="https://www.insight-it.ru/goto/330b447f/" rel="nofollow" target="_blank" title="https://browserlab.adobe.com/en-us/index.html"&gt;https://browserlab.adobe.com/en-us/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;﻿Хоть и попиксельное соответствие приветствуется и считается
    обязательным, но местами возможны отклонения:&lt;ol&gt;
&lt;li&gt;Когда дизайнер нарисовал криво&lt;/li&gt;
&lt;li&gt;Когда незначительные различия в отрисовке шрифтов&lt;/li&gt;
&lt;li&gt;Когда у дизайнера разошлось вдохновение и единственный
    способ сделать точно так как на картинке - впихнуть
    здоровенный JPEG в пару сот килобайт на фон; в таких случаях
    стараемся разбить фон на составные части и/или паттерны и
    делаем его частями, стараясь минимизировать ущерб "креативу"
    при адекватном размере страницы&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Кроссбраузерность&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Перед приемом/сдачей работы проверить
    на&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/939754d/" rel="nofollow" target="_blank" title="http://browsershots.org/"&gt;http://browsershots.org/&lt;/a&gt; (или аналоге) и во всех доступных
    под рукой браузерах&lt;/li&gt;
&lt;li&gt;Не забыть мобильные браузеры Opera Mini, iPhone и Android.&lt;/li&gt;
&lt;li&gt;Хаки для IE в conditional comments, не забываем правильно
    фильтровать для разных его версий&lt;/li&gt;
&lt;li&gt;IE6 должен адекватно воспринимать специфичные для HTML5 теги&lt;/li&gt;
&lt;li&gt;Помимо этого желательно проверить все разрешения от 1024х768 до
    1920х1080 - везде все должно смотреться пристойно, без
    скроллбаров и излишних пустых областей&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Гибкость шаблона&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;При этом не смотря на то, что в макетах для примера используется
    какой-то текст, шаблон должен нормально себя вести при любом
    количестве текста (как нулевом, так и очень большом) в любом
    элементе&lt;/li&gt;
&lt;li&gt;Если пункт меню, заголовок или просто текст в 5-10 раз длиннее
    или короче того, что на макете - все должно отображаться
    корректно (по возможности, естественно)&lt;/li&gt;
&lt;li&gt;Если в макете не было всех шести видов заголовков, ссылок в
    тексте, картинок, цитат, аббревиатур, блоков pre и code - это не
    значит, что стиль по-умолчанию для всех стандартных
    html-элементов может отсутствовать в CSS - возьмите цвета и
    стиль от других элементов шаблона и сделайте хоть как-то, для
    образца все элементы можно добавить в текст, даже если их там не
    было&lt;/li&gt;
&lt;li&gt;У всех ссылок должно быть отдельное поведение для :hover, у
    ссылок внутри текста - и для :visited&lt;/li&gt;
&lt;li&gt;Если в макете все же были заголовки: их структура должна быть
    перенесена верно&lt;/li&gt;
&lt;li&gt;Надеяться, что WYSIWYG или Word проставит какие-то особые стили
    к тексту и все будет нормально&amp;nbsp;&lt;em&gt;нельзя&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Если используем HTML5, то верстка должна быть&amp;nbsp;&lt;em&gt;семантической&lt;/em&gt;,
    то есть блоки навигации заворачиваем в nav, сайдбар в aside
    и.т.п.&lt;/li&gt;
&lt;li&gt;Стили для печати и мобильной версии указываем отдельными файлами
    с соответствующим media&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Не забываем о производительности CSS: селекторы обрабатываются
    справа-налево, подробнее
    здесь:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/6aa64e6a/" rel="nofollow" target="_blank" title="http://code.google.com/speed/page-speed/docs/rendering.html"&gt;http://code.google.com/speed/page-speed/docs/rendering.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS3 правила для нормальных браузеров (border-radius, gradient,
    text-shadow, box-shadow), с остальными извращаемся отдельно,
    никаких хаков с кучей &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; и подобных&lt;/li&gt;
&lt;li&gt;Размеры и позиционирование элемента должны указываться в одних
    единицах измерения&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Изображения&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;С умом относимся к выбору формата и уменьшаем их объем
    (см.&amp;nbsp;&lt;a href="https://www.insight-it.ru/frontend/2011/instrumenty-dlya-minimizacii-razmera-izobrazhenijj/"&gt;"Инструменты для минимизации размера изображений"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Иллюстрации и элементы интерфейса с четкими краями лучше
    сохранять в PNG8, фотографии в progressive JPEG - но в целом
    руководствуемся минимизацией объема не в ущерб качеству&lt;/li&gt;
&lt;li&gt;Отсутствие &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;alt&lt;/code&gt;&amp;nbsp;&lt;em&gt;непростительно&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;По возможности всегда указываем размеры изображений, особенно
    если они являются частью дизайна и заранее известны&lt;/li&gt;
&lt;li&gt;Для групп небольших изображений приблизительно одинаковой ширины
    или высоты (иконки, картинки разных буллетов и.т.п.) используем
    CSS Sprites:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/149b7279/" rel="nofollow" target="_blank" title="http://css-tricks.com/css-sprites/"&gt;http://css-tricks.com/css-sprites/&lt;/a&gt; (для ленивых
    есть ряд инструментов для автоматизации процесса)&lt;/li&gt;
&lt;li&gt;Для совсем маленьких изображений используем
    data:URI+MHTML:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/905dc16e/" rel="nofollow" target="_blank" title="http://www.phpied.com/inline-mhtml-data-uris/"&gt;http://www.phpied.com/inline-mhtml-data-uris/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Шрифты&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Указываем базовый размер шрифта в em, там где нужен размер
    больше или меньше - в % от базового&lt;/li&gt;
&lt;li&gt;Line-height задаем в долях&lt;/li&gt;
&lt;li&gt;Должно быть как минимум одному шрифту для Windows, Linux и Mac
    OS. Примеры:&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Arial,Helvetica,FreeSans,"Liberation Sans","Nimbus Sans L",sans-serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"Courier New",Courier,FreeMono,"Nimbus Mono L","Liberation Mono",monospace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Georgia,"Bitstream Charter","Century Schoolbook L","Liberation Serif",Times,serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"Lucida Sans","Lucida Sans Unicode","Lucida Grande",Lucida,sans-serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"Lucida Console",Monaco,"DejaVu Sans Mono","Bitstream Vera Sans Mono","Liberation Mono",monospace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Palatino,"Palatino Linotype",Palladio,"URW Palladio L","Book Antiqua","Liberation Serif",Times,serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tahoma,Geneva,"DejaVu Sans Condensed",sans-serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"Times New Roman",Times,"Nimbus Roman No9 L","FreeSerif","Liberation Serif",serif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Verdana,"Bitstream Vera Sans","DejaVu Sans","Liberation Sans",Geneva,sans-serif&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Если требуется нестандартный шрифт, используем кроссбраузерный
    font-face:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/419fd700/" rel="nofollow" target="_blank" title="http://randsco.com/index.php/2009/07/04/p680"&gt;http://randsco.com/index.php/2009/07/04/p680&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Формы&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ко всем полям должен быть label или, если так задумано,
    toggleval&lt;/li&gt;
&lt;li&gt;Если используем HTML5, то и поля форм тоже делаем по этому
    стандарту (email/tel)&lt;/li&gt;
&lt;li&gt;Проверить работу tabindex&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Использование &lt;strong&gt;микроформатов&lt;/strong&gt; желательно, если они уместны (hCard,
    hCalendar, hAtom, XFN)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Весь используемый JS располагается перед закрывающим &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Желательно использование асинхронной загрузки файлов&lt;/li&gt;
&lt;li&gt;Работоспособность проверяем средствами Firebug&lt;/li&gt;
&lt;li&gt;Сайт должен нормально функционировать с выключенным JavaScript
    (и Flash тоже, к слову)&lt;/li&gt;
&lt;li&gt;Если на странице имеются формы - они должны валидироваться еще
    до отправки и нормально отображать ошибки (как минимум просто
    цветом)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Остальное&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Полное отсутствие комментариев в html, кроме условных&lt;/li&gt;
&lt;li&gt;Копирайт пишем правильно:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/dd9dd788/" rel="nofollow" target="_blank" title="http://habrahabr.ru/blogs/typography/23812/"&gt;http://habrahabr.ru/blogs/typography/23812/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Никакого CSS или JS внутри HTML, только внешние файлы&lt;/li&gt;
&lt;li&gt;Ссылки на внешние ресурсы должны быть с &lt;code&gt;target="_blank"&lt;/code&gt; и по
    необходимости могут снабжаться
    иконками:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/2fb93566/" rel="nofollow" target="_blank" title="https://github.com/joshuaclayton/blueprint-css/blob/master/blueprint/plugins/link-icons/screen.css"&gt;https://github.com/joshuaclayton/blueprint-css/blob/master/blueprint/plugins/link-icons/screen.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Текст лучше оттипографить перед
    публикацией:&amp;nbsp;&lt;a href="https://www.insight-it.ru/goto/d2a1d6c6/" rel="nofollow" target="_blank" title="http://rmcreative.ru/blog/post/tipograf"&gt;http://rmcreative.ru/blog/post/tipograf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Логотип должен вести на главную страницу&lt;/li&gt;
&lt;li&gt;Ссылки на внешние ресурсы (изображения, CSS, JS) лучше делать
    относительными&lt;/li&gt;
&lt;li&gt;Не забываем &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; всей страницы, должен быть понятен как
    человеку, так и поисковым системам&lt;/li&gt;
&lt;li&gt;HTML, JS и CSS лучше минимизировать не на этапе верстки, а
    автоматически при генерации шаблонов&lt;/li&gt;
&lt;li&gt;Не забыть выкинуть не используемые стили (вроде красной рамочки
    для выделения элементов в процессе верстки)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Fri, 25 Feb 2011 00:02:00 +0300</pubDate><guid>tag:www.insight-it.ru,2011-02-25:frontend/2011/kak-nuzhno-verstat/</guid><category>css</category><category>html</category><category>html5</category><category>js</category><category>markup</category><category>верстка</category></item><item><title>9 основных правил написания XML</title><link>https://www.insight-it.ru//theory/2008/9-osnovnyx-pravil-napisaniya-xml/</link><description>&lt;p&gt;Правила написания XML являются в равной степени простыми и строгими, что
делает как ручное составление XML документов, так и написание программ,
умеющих анализировать и генерировать XML документы, достаточно
несложными задачами. Помимо этого, правильно написанный документ в этом
формате говорит сам за себя - прочитав его не трудно понять о чем речь.&lt;/p&gt;
&lt;p&gt;В этой записи я планирую перечислить и объяснить все 9 правил, с
использованием примеров.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;В качестве примера будет использован следующий XML документ, описывающий
книгу:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;book&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&lt;/span&gt; &lt;span class="na"&gt;subtitle=&lt;/span&gt;&lt;span class="s"&gt;"The Dark Elf Trilogy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sojourn&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;author&amp;gt;&lt;/span&gt;R. A. Salvatore&lt;span class="nt"&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;chapter&amp;gt;&lt;/span&gt;Well met&lt;span class="nt"&gt;&amp;lt;/chapter&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/book&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Не правда ли легко понять, что речь идет именно о книге?&lt;/p&gt;
&lt;h4&gt;Теперь самое подходящее время перейти непосредственно к правилам оформления документов.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Документ должен начинаться с определения типа документа,&lt;/strong&gt;
    содержащее указание версии XML (в нашем случае - 1.0) и кодировку
    символов (соответственно - UTF-8)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Должен содержать ровно один корневой элемент&lt;/strong&gt; - в нашем пимере
    это &lt;code&gt;&amp;lt;book&amp;gt; &amp;lt;/book&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Каждому открывающему тэгу должен соответствовать один
    закрывающий.&lt;/strong&gt; Как не трудно заметить это правило соблюдается в
    примере, если Вы привыкли в HTML оставлять тэги открытыми примерно
    следующим образом: &lt;code&gt;&amp;lt;p&amp;gt;Какой-то текст&lt;/code&gt;, то изучение XML может стать неплохим поводом отучиться от этой
    вредной привычки.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XML тэги чувствительны к регистру символов.&lt;/strong&gt; Тэги &lt;code&gt;&amp;lt;Book&amp;gt;&lt;/code&gt; и
    &lt;code&gt;&amp;lt;book&amp;gt;&lt;/code&gt; считаются разными, запись &lt;code&gt;&amp;lt;Book&amp;gt; &amp;lt;/book&amp;gt;&lt;/code&gt; будет
    считаться ошибочной.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Тэги должны быть расположены строго друг внутри друга.&lt;/strong&gt;
    Продемонстрирую на отдельном примере: &lt;code&gt;&amp;lt;foo&amp;gt;ВЕ&amp;lt;bar&amp;gt;РНО&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/code&gt;, а так &lt;code&gt;&amp;lt;foo&amp;gt;НЕВЕ&amp;lt;bar&amp;gt;РНО&amp;lt;/foo&amp;gt;&amp;lt;/bar&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Значения всех атрибутов всегда должны быть заключены в кавычки.&lt;/strong&gt;
    Например: &lt;code&gt;&amp;lt;title subtitle="The Dark Elf Trilogy"&amp;gt;Sojourn&amp;lt;/title&amp;gt;&lt;/code&gt; - верно, а &lt;code&gt;&amp;lt;title subtitle=The Dark Elf Trilogy&amp;gt;Sojourn&amp;lt;/title&amp;gt;&lt;/code&gt; - нет.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Последовательно расположенные пробелы не объединяются в один.&lt;/strong&gt;
    Имейте это ввиду, если вы привыкли к HTML.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Конец строки обозначается просто переводом на новою строку, без возврата каретки.&lt;/strong&gt; Во многих приложениях для обозначения конца
    строки используется возврат каретки совместно с переводом на новую
    строку (&lt;code&gt;/r/n&lt;/code&gt;), в XML же принято для
    этих целей использовать просто перевод на новую строку
    (&lt;code&gt;/n&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Комментарии обозначаются так же как и в HTML:&lt;/strong&gt;
&lt;code&gt;&amp;lt;!--комментарий--&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Как Вы могли уже убедиться этот формат оформления данных представляет
собой всего лишь текст, разбавленный некоторым количеством тэгов и
следующий простым правилам. Не стоит ожидать от него чего-то большего.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Sun, 06 Jan 2008 21:53:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-06:theory/2008/9-osnovnyx-pravil-napisaniya-xml/</guid><category>markup</category><category>XML</category><category>описание данных</category><category>хранение данных</category></item><item><title>Что такое XML?</title><link>https://www.insight-it.ru//theory/2008/chto-takoe-xml/</link><description>&lt;p&gt;Если Вам интересен ответ на этот вопрос, то Вам сюда!&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Ответ на вопрос, заявленный в теме прост до безобразия. Сама
аббревиатура XML расшифровывается как e&lt;strong&gt;X&lt;/strong&gt;tensible &lt;strong&gt;M&lt;/strong&gt;arkup
&lt;strong&gt;L&lt;/strong&gt;anguage, из чего логически вытекает все остальное.&lt;/p&gt;
&lt;p&gt;Как и HTML он является &lt;em&gt;языком разметки&lt;/em&gt;, но в отличии от HTML, XML
предназначен для других целей: он был разработан для &lt;em&gt;описания и
хранения данных&lt;/em&gt;, когда HTML в основном сосредоточен на определении
того, как данные будут отображаться на экране. Еще одним основным
отличием является тот факт, XML нет предопределенных тэгов, Вы должны
сами определять какие тэги будете использовать.&lt;/p&gt;
&lt;p&gt;XML может использоваться для хранения практически любых типов данных, а
его расширяемость позволяет ограничивать варианты его использования лишь
фантазией разработчиков. Вот некоторые из них:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В совокупности с технологией XSL или CSS данные, хранящиеся в XML
    могут быть представлены как простая веб-страница&lt;/li&gt;
&lt;li&gt;XML являться форматом обмена данными между несовместимыми системами,
    так как он не зависит ни от программного обеспечения, ни от
    оборудования, на котором хранятся данные&lt;/li&gt;
&lt;li&gt;XML может не просто хранить данные, но и дать понять что же эти
    данные значат&lt;/li&gt;
&lt;li&gt;На базе XML может быть построено множество других технологии, из уже
    получивших широкое распространение можно назвать RSS, WAP и WML.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Одними из самых наглядных способов увидеть что же из себя представляет
XML - являются &lt;a href="/feed"&gt;RSS лента&lt;/a&gt; и &lt;a href="/sitemap.xml"&gt;карта сайта в XML&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Sun, 06 Jan 2008 20:18:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-06:theory/2008/chto-takoe-xml/</guid><category>markup</category><category>XML</category><category>описание данных</category><category>разметка</category><category>хранение данных</category></item></channel></rss>