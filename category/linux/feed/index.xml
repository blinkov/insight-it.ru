<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Insight IT</title><link>https://www.insight-it.ru/</link><description></description><atom:link href="https://www.insight-it.ru/category/linux/feed/index.xml" rel="self"></atom:link><lastBuildDate>Fri, 17 Feb 2012 16:27:00 +0400</lastBuildDate><item><title>Как работает epoll?</title><link>https://www.insight-it.ru//linux/2012/kak-rabotaet-epoll/</link><description>&lt;p&gt;Слово epoll сейчас определенно на слуху, в первую очередь благодаря
росту популярности неблокирующих HTTP-серверов. При этом мало кто
пытается разобраться в том, что, собственно, за ним стоит и почему
использующие этот механизм продукты, среди которых достойное место
занимают, например, &lt;a href="/tag/nginx/"&gt;nginx&lt;/a&gt;, &lt;a href="/tag/node-js/"&gt;node.js&lt;/a&gt; и
&lt;a href="/tag/tornado/"&gt;Tornado&lt;/a&gt;, так значительно выигрывают в
производительности у ближайших альтернатив. Хотите копнуть глубже?
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id="o-chem-poidet-rech"&gt;О чем пойдет речь?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;epoll&lt;/strong&gt; является масштабируемой &lt;em&gt;неблокирующей&lt;/em&gt; системой
    уведомления о собятиях ввода-вывода в &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;. В
    отличии от более старых механизмов, у epoll время срабатывания не
    зависит от количества открытых файловых дескрипторов.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;epoll&lt;/strong&gt; используется для обработки событий &lt;em&gt;неблокирующих&lt;/em&gt;
    TCP-сокетов, операционная система оповещает приложение когда один из
    сокетов "под наблюдением" готов получить или отправить сообщение. В
    традиционном же подходе на каждый сокет выделяется поток выполнения
    (thread), который блокируется до возвращения обращения к
    соответствующему сокету.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="card blue lighten-4"&gt;
&lt;p&gt;&lt;div class="card-content"&gt;
Сразу хочу предупредить, хоть на практике
&lt;a href="/tag/epoll/"&gt;epoll&lt;/a&gt;&amp;nbsp;и&amp;nbsp;используется чаще, существуют и альтернативные
реализации схожего подхода, например &lt;a href="/tag/kqueue/"&gt;kqueue&lt;/a&gt; в BSD
системах. Конечные продукты обычно используют библиотеку, абстрагирующуе
низкоуровневые вызовы, наиболее
распросраненные -&amp;nbsp;&lt;a href="/goto/http://software.schmorp.de/pkg/libev.html"&gt;libev&lt;/a&gt;
и &lt;a href="https://www.insight-it.ru/goto/cd2ee101/" rel="nofollow" target="_blank" title="http://libevent.org/"&gt;libevent&lt;/a&gt;.
&lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="chto-eto-daet"&gt;Что это дает?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Не нужно впустую тратить &lt;em&gt;системные ресурсы&lt;/em&gt; на создание,
    уничтожение и поддержания пула потоков выполнения.&lt;/li&gt;
&lt;li&gt;Один системный процесс может поддерживать существенно большее
    &lt;em&gt;количество TCP-соединений.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Длительные соединения&lt;/em&gt;, по которым редко поступают сообщения, не
    держат заблокированный поток и потребляют минимум системных
    ресурсов.&lt;/li&gt;
&lt;li&gt;Отсутствие проблем с &lt;em&gt;синхронизацией&lt;/em&gt; пула потоков и доступом к
    общей памяти.&lt;/li&gt;
&lt;li&gt;Возможность (но не необходимость) без дополнительных сложностей
    держать в памяти процесса какое-то общее состояние, если приложение
    того требует.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="obratnaia-storona-medali"&gt;Обратная сторона медали&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Потоки выполнения в блокирующей модели имеют относительно короткий
    жизненный цикл и рано или поздно освобождают выделенную им память,
    процесс обработки неблокирующих соединений живет существенно дольше
    и намного более уязвим для &lt;em&gt;утечек памяти&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Использование одного системного процесса без пула потоков выполнения
    ограничивает приложение &lt;em&gt;использованием лишь одного процессорного
    ядра&lt;/em&gt;, что делает такой подход менее пригодным для приложений, в
    значительной мере использующих вычислительные ресурсы. В большинстве
    же случаев приемлемым решением является запуск нескольких одинаковых
    копий приложения на одном сервере по количеству процессорных ядер.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ошибки в коде&lt;/em&gt; могут негативно повлиять на работу всего процесса
    приложения, в то время как в блокирующей модели потоки выполнения
    обычно достаточно изолированы друг от друга.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="na-paltsakh"&gt;На пальцах&lt;/h2&gt;
&lt;p&gt;Вернемся к изначальному вопросу статьи: &lt;em&gt;Как работает epoll?&lt;/em&gt; Давайте
попробуем разобрать на простом примере.&lt;/p&gt;
&lt;p&gt;Представьте себе &lt;strong&gt;пиццерию&lt;/strong&gt; &lt;em&gt;(физический сервер)&lt;/em&gt;. &lt;strong&gt;Вы&lt;/strong&gt; &lt;em&gt;(приложение
или HTTP-сервер)&lt;/em&gt; получаете &lt;strong&gt;заказы&lt;/strong&gt; &lt;em&gt;(обращения на сокет, например
HTTP-запрос)&lt;/em&gt; на выпечку &lt;strong&gt;пиццы&lt;/strong&gt; &lt;em&gt;(ответы на обращение, например
HTML-документы).&lt;/em&gt; Есть два сценария, по которым можно их обрабатывать.&lt;/p&gt;
&lt;h3 id="blokiruiushchii-traditsionnyi"&gt;Блокирующий (традиционный)&lt;/h3&gt;
&lt;p&gt;Вы принимаете заказ, ставите пиццу в &lt;strong&gt;печь&lt;/strong&gt; &lt;em&gt;(системные ресурсы,
в.т.ч. оперативная память, необходимые для обработки запроса)&lt;/em&gt; и
непрерыано наблюдаете за тем как пицца печется. Как только пицца
готова - вы берете её и отдаете в руки &lt;strong&gt;заказчику&lt;/strong&gt; (источник заказа,
например браузер), после чего принимаете следующий заказ. При
необходимости можно нанять &lt;strong&gt;помощников&lt;/strong&gt; &lt;em&gt;(потоки выполнения,
threads)&lt;/em&gt;, чтобы следить за выпеканием пицц.&lt;/p&gt;
&lt;p&gt;Вы ограничены как количеством печей, так и количеством помощников,
которые могут поместиться в вашей пиццерии.&lt;/p&gt;
&lt;h3 id="neblokiruiushchii-epoll-i-analogi"&gt;Неблокирующий (epoll и аналоги)&lt;/h3&gt;
&lt;p&gt;Вы принимаете заказ, ставит пиццу в печь и ставите &lt;strong&gt;таймер&lt;/strong&gt;
&lt;em&gt;(операционная система посредством epoll)&lt;/em&gt;, чтобы узнать когда пицца
испечется. После чего Вы возвращаетесь к приему заказов. Как только
прозвенел таймер - Вы идете к соответствующей печи, достаете пиццу и
отдаете заказчику, после чего снова возвращаетесь к приему заказов.&lt;/p&gt;
&lt;p&gt;При таком подходе Вы ограничены лишь количеством печей и не нуждаетесь в
помощниках, хотя если срабатывает несколько таймеров одновременно могут
появлятся дополнительные задержки. В качестве бонуса легко готовить
пиццы, требующие длительного времени выпекания.&lt;/p&gt;
&lt;h2 id="zakliuchenie_1"&gt;Заключение&lt;/h2&gt;
&lt;p&gt;Как Вы уже догадались, цель этого поста не научить читателя работать с
&lt;strong&gt;epoll&lt;/strong&gt; напрямую или посредством распространенных библиотек (для
большинства веб-разработчиков это не нужно), а дать общее представление
о блокирующих и неблокирующих сокетах, принципах их работы и основных
отличиях. При выборе ключевых технологий и проектировании архитектуры
интернет-проекта эти вопросы определенно стоит иметь ввиду.&lt;/p&gt;
&lt;p&gt;Буду рад услышать дополнения и поправки в комментариях, &lt;a href="/feed/"&gt;до новых встреч&lt;/a&gt;!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Fri, 17 Feb 2012 16:27:00 +0400</pubDate><guid>tag:www.insight-it.ru,2012-02-17:linux/2012/kak-rabotaet-epoll/</guid><category>epoll</category><category>kqueue</category><category>Linux</category><category>sockets</category><category>разработка</category></item><item><title>Google Chrome</title><link>https://www.insight-it.ru//linux/2008/google-chrome/</link><description>&lt;p&gt;&lt;img alt="Google Chrome" class="right" src="https://www.insight-it.ru/images/google-chrome.png" title="Google Chrome"/&gt;
Наверное многие из вас уже успели за последние пару дней стать
свидетелями всей этой шумихи на просторах Сети, связанной с выходом
Google на рынок браузеров. Сопутствующие релизу
&lt;a href="https://www.insight-it.ru/goto/c770d69f/" rel="nofollow" target="_blank" title="http://www.google.com/googlebooks/chrome/#"&gt;комиксы&lt;/a&gt; произвели на меня
вполне положительное впечатление, благодаря достаточно большой
актуальности поднятых в них проблем и интересным вариантам их решений.
Так что я определенно решил, что поглядеть что за зверь такой - &lt;strong&gt;Google
Chrome&lt;/strong&gt;, определенно стоит, а что из этого вышло я и хотел бы тут
рассказать, так что очередную рекламу нового продукта или какие-либо
практически полезные советы у Вас врядли получится здесь обнаружить.
&lt;!--more--&gt;
Первым делом я посетил &lt;a href="https://www.insight-it.ru/goto/34cc95f4/" rel="nofollow" target="_blank" title="http://www.google.com/chrome"&gt;официальную страничку
браузера&lt;/a&gt; и практически сразу немного
разочаровался, увидев в заголовке надпись &lt;strong&gt;Google Chrome (BETA) for
W****ws&lt;/strong&gt;. Сразу напросился вопрос: а где версия для &lt;strong&gt;Linux&lt;/strong&gt;?
Покопавшись в соседних страничках ничего подобного обнаружить не
удалось - пришлось пожать плечами с мыслью "наверное еще не сделали".&lt;/p&gt;
&lt;p&gt;Зато через какое-то время наткнувшись на очередную заметку про все ту же
довольно избитую тему, я заметил ма-а-аленькую неприметную
&lt;a href="https://www.insight-it.ru/goto/2e08eade/" rel="nofollow" target="_blank" title="http://dev.chromium.org/developers/how-tos/build-instructions-linux"&gt;ссылку&lt;/a&gt;
на "инструкцию по компиляции Google Chrome из исходников в Linux". В
очередной раз пожав плечами с мыслью "а нам не привыкать, все равно
Gentoo пользуюсь" отправился вводить заветное заклинание в
свежесозданную консольку.&lt;/p&gt;
&lt;p&gt;Заклинание это выглядит примерно следующим образом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;CHROME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/src
mkdir &lt;span class="nv"&gt;$CHROME&lt;/span&gt;/chrome
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$CHROME&lt;/span&gt;/chrome
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C
&lt;span class="nv"&gt;$CHROME&lt;/span&gt;/depot_tools/gclient config http://src.chromium.org/svn/trunk/src
&lt;span class="nv"&gt;$CHROME&lt;/span&gt;/depot_tools/gclient sync
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$CHROME&lt;/span&gt;/src/chrome
../third_party/scons/scons.py Hammer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Для успешного каста требуются следующие ингридиенты:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;subversion &amp;gt;= 1.4&lt;/li&gt;
&lt;li&gt;pkg-config &amp;gt;= 0.20&lt;/li&gt;
&lt;li&gt;python &amp;gt;= 2.4&lt;/li&gt;
&lt;li&gt;perl &amp;gt;= 5.x&lt;/li&gt;
&lt;li&gt;gcc/g++ &amp;gt;= 4.2&lt;/li&gt;
&lt;li&gt;bison &amp;gt;= 2.3&lt;/li&gt;
&lt;li&gt;flex &amp;gt;= 2.5.34&lt;/li&gt;
&lt;li&gt;gperf &amp;gt;= 3.0.3&lt;/li&gt;
&lt;li&gt;libnss3-dev &amp;gt;= 3.12&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Начался процесс вполне оптимистично - строчки, генерируемые &lt;strong&gt;svn co&lt;/strong&gt;
побежали по экрану вполне весело, но когда этот процесс затянулся на
более чем час &amp;ndash; стало очевидно, что даже &lt;em&gt;Google&lt;/em&gt; оказалось не по зубам
выдержать такой наплыв желающх "заценить" новую игрушку и обеспечить
достаточную пропускную способность на сервере с SVN. Правда и масштабы
проекта мягко говоря впечатляют - директория с исходным кодом перед
инициализацией компиляции оказалось очень даже весомой: &lt;strong&gt;2.6 GB&lt;/strong&gt;. В
общем в итоге я не придумал ничего лучше, чем по старой традиции
оставить браузер компилироваться на ночь и с чистой совестью уползти
спать.&lt;/p&gt;
&lt;p&gt;В итоге оказалось, что в результате получается не вовсе браузер, а лишь
некоторые непонятно зачем нужные бинарники: надо было внимательно читать
инструкцию, особенно обведенный в красную рамку блок - студенческая
привычка при чтении чего-либо подсознательно отфильтровывать всю на
первый взгляд второстепенную информацию, попадающую в категорию "слишком
много букв", дала о себе знать :( В общем там об этом все заранее
предупреждали - я просто не заметил, ну да ладно: в wine-то оно точно
заведется, все тот же Google с легкостью помог обнаружить
соответствующий мануал, для моего Gentoo он свелся к следующему:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
emerge --sync&lt;span class="p"&gt;;&lt;/span&gt; emerge -av wine cabextract
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/bin
sudo wget www.kegel.com/wine/winetricks
sudo chmod +x winetricks
winetricks riched20 riched30 flash allfonts
&lt;span class="nb"&gt;cd&lt;/span&gt; ~
wget gpdl.google.com/chrome/install/149.27/chrome_installer.exe
wine chrome_installer.exe
rm chrome_installer.exe
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Запуск с ходу из инсталлятора ничем хорошим не закончилcя, но вот такая
команда вполне нормально запустила-таки браузер&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wine ~/.wine/drive_c/windows/profiles/blinkov/Local Settings/Application Data/Google/Chrome/Application/chrome.exe--new-http --in-process-plugins
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(если кто соберется копипастить - не забываем подменять &lt;code&gt;blinkov&lt;/code&gt; на свое имя
пользователя)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Первое впечатление - ужасный V**ta-like дизайн, вернее не то чтобы он
совсем ужасный - минималистичность очень даже полезное свойство для
дизайна браузера, но в мое KDE 3.5.9 темно-фиолетовой раскраски он не
вписывается ну совсем никак. Ну да ладно - пока он стоит "просто
побаловаться", то можно и потерпеть. Далее я решил пройтись по основным
"фишечкам", заинтересовавшим меня в комиксах - все реализовано вполне
"как обещали", очень много концептуально правильных решений, которых в
старом-добром FF определенно не хватает (перечислять наверное смысла
нет - все и так уже, наверное, в курсе что там есть "вкусненького"). Но
и многих абсолютно жизненно-важных вещей я там не обнаружил - начиная с
блокировки рекламы и заканчивая все тем же стандартно-фиксированным
дизайном и отсутствием центрального репозитория плагинов. Кое-какие
неприятности можно свалить на все еще не окончательную доведенность до
ума wine (проблемы с SSL/TSL, скажем), но на них я смело закрывал
глаза - пока не будет полноценной Linux-версии о регулярном
использовании данного продукта речи быть просто не может. Скорость
работы новинки также произвела впечатление - на его фоне даже FF чисто
субъективно показался медлительным (не смотря на все огрехи wine, как
оно будет выглядить в native-версии - предсказать сложно).&lt;/p&gt;
&lt;p&gt;Меню настроек оказалось вполне стандартным - ничего лишнего, лишь самые
необходимые вещи, даже ребенок разберется. Хотя сложно на самом деле
сказать плюс это или минус: если вдруг взбредет в голову потюнить
что-либо более специфическое, могут возникнуть проблемы, хотя впринципе
возможно там всетаки предусмотренно какое-то более расширенное меню
настроек, по аналогии с about:config в FF, а я его просто не нашел.&lt;/p&gt;
&lt;p&gt;Вдоволь наигравшись, я смело закрыл окошко браузера, с твердой
уверенностью, что когда-нибудь потом обязательно заморочусь и с
установкой и (возможно) эксплуатацией полноценной native Linux версии,
когда граждане из Google соизволят-таки довести ее до работоспособного
состояния - к тому времени глядишь и ситуацию с плагинами и темами
исправят. Вот такая вот бестолковая история, спасибо, что дочитали до
конца :)&lt;/p&gt;
&lt;p&gt;P.S.: А вот &lt;a href="/feed/"&gt;тут есть RSS&lt;/a&gt;, если вдруг кто еще не в курсе.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Sat, 06 Sep 2008 00:36:00 +0400</pubDate><guid>tag:www.insight-it.ru,2008-09-06:linux/2008/google-chrome/</guid><category>Chrome</category><category>Google</category><category>Google Chrome</category><category>online</category><category>браузер</category></item><item><title>Amazon Web Services</title><link>https://www.insight-it.ru//linux/2008/amazon-web-services/</link><description>&lt;p&gt;Если Вы уже успели прочитать статью про &lt;a href="https://www.insight-it.ru/highload/2008/arkhitektura-amazon/"&gt;архитектуру Amazon&lt;/a&gt;, то Вы уже знаете, что
этот проект активно использует сервис-ориентированную архитектуру для
максимально эффективной организации взаимодействия между всеми
подпроектами. Этот подход используется практически во всех начинаниях
Amazon и во многом благодаря ему они выпустили в свет групу сервисов под
общим названием &lt;em&gt;Amazon Web Services&lt;/em&gt;.
&lt;!--more--&gt;
Идея их достаточно проста: они предоставляют практически все
необходимое для запуска веб-проектов абсолютно произвольной
направленности и практически неограниченных масштабов. Причем они
старались учесть все возможные потребности потребителей и именно
по-этому сервисов в эту группу входит четыре:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Elastic Cloud 2&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;"Практически любой высоконагруженный сервис требует внушительных
вычислительных мощностей" - вполне закономерное высказывание, именно
проблемы с ним связанные и призван решить данный сервис. Сервис
предоставляет в распоряжение пользователей виртуальные машины
сопоставимые по производительности с "железными" серверами в
считанные минуты, причем имеется возможность настраивать изначальный
набор программного обеспечения и конфигурацию виртуального
оборудования. Размещаемые на таких виртуальных машинах сервисы могут
наращивать вычислительные мощности существенно быстрее по сравнению
с использованием dedicated или colocation хостинга.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Simple Storage Service&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Этот сервис по сути представляет собой "бездонное" хранилище для
произвольных файлов. Функционал достаточно прост: положить, забрать,
удалить. Доступ возможен с использованием нескольких предоставляемых
интерфейсов, а доступ к файлам может быть ограничен. Казалось бы
ничего особенного, но во многих интернет-проектах такая возможность
может оказаться полезной.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;SimpleDB&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Позиционируется как сервис для предоставления доступа к
структурированным данным. С точки зрения разработчика проще
охарактеризовать его как нереляционную базу данных. Схема данных
генерируется в процессе эксплуатирования сервиса - заранее ее
указывать не нужно, а запросы в какой-то степени напоминают сильно
ограниченный SQL с возможностью только самых примитивных операций:
сравнение, объединение, пересечение и т.п. У этой системы есть
несколько аналогов, среди них Apache HBase и Hypertable.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Simple Queue Service&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Более экзотический сервис - предоставляет возможность создания
распределенных очередей сообщений для обеспечения взаимодействия
других компонентов системы, которые предполагается, что будут
размещены в Amazon EC2. Далеко не всем веб-проектам такая
функциональность нужна, но если она все же понадобится - этот сервис
здорово упростит жизнь разработчикам.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Все это можно было бы легко узнать и просто посетив &lt;a href="https://www.insight-it.ru/goto/15233a10/" rel="nofollow" target="_blank" title="http://www.amazon.com/AWS-home-page-Money/b/ref=sc_iw_l_0_3435361_2?ie=UTF8&amp;amp;node=3435361&amp;amp;no=3435361&amp;amp;me=A36L942TSJ2AJA"&gt;официальный их сайт&lt;/a&gt;,
но не в этом суть - написать этот пост меня подтолкнул тот факт, что мне
довелось столкнуться с этими сервисами и на личном опыте по работе.
Собственно говоря просто хочу поделиться впечатлениями :)&lt;/p&gt;
&lt;p&gt;Знакомство было не долгим - всего пару недель, да и поиграться удалось
по большей части лишь с &lt;strong&gt;Amazon EC2&lt;/strong&gt; и совсем чуть-чуть с &lt;strong&gt;S3&lt;/strong&gt;.
Первое впечатление произвел их &lt;a href="https://www.insight-it.ru/goto/70ee3bf7/" rel="nofollow" target="_blank" title="http://docs.amazonwebservices.com/AWSEC2/2008-02-01/GettingStartedGuide/"&gt;Getting Started Guide&lt;/a&gt; -
все просто и лаконично, еще даже до получения доступа к сервису у меня
сложилось четкое представление о том, как он работает - несомненный
плюс. После получения всех необходимых ключей от аккаунта (их было
несколько, запутаться достаточно легко, но документация всегда спасала)
можно сразу же приступать к работе с сервисом, скачав набор консольных
утилит. Первым делом стоит взглянуть на ассортимент предоставляемых
операционных систем для установки на будущие виртуальные машины - на
первый взгляд представлены все популярные дистрибутивы Linux, что в
общем-то более, чем достаточно (но при более детальном рассмотрении это
оказалось далеко не так: различается в них только набор программного
обеспечения, а ядро везде одно и то же - от Fedora 8). Так что выбор
предстоит хоть и непростой, но скорее его стоит основывать его на личном
предпочтении и удобстве, а не на каких-то других соображениях - разница
в итоге будет невелика. Я лично остановил свой выбор на Debian Etch - не
знаю по каким соображениям, да и не важно это вовсе, как впоследствии
оказалось. Сделав свой выбор и подождав буквально несколько секунд можно
узнать по какому URL располагается свежесозданная виртуальная машина
(хочется отметить, что у утилиты их создания есть параметр "количество",
то есть создавать их можно целыми пачками).&lt;/p&gt;
&lt;p&gt;Взмахнув волшебной палочкой (всмысле парой команд в локальной консоли)
пользователь попадает в виртуальную консоль не менее виртуального
сервера, с которым можно работать абсолютно так же, как и с настоящим
железным сервером - варианты использования ограничиваются лишь
воображением и требованиями проекта, который планируется там размещать.
Останавливаться на дальнейшем смысла не вижу - все сугубо индивидуально.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S3&lt;/strong&gt; использовался мной лишь для хранения созданных модифицированных
образов операционных систем, но своему описанию он соответствует
абсолютно полностью: файлы загружаются простейшим образом, абсолютно не
забивая себе голову о том, как они там будут храниться (хотя сервис на
самом деле имеет под собой достаточно непростую структуру).&lt;/p&gt;
&lt;p&gt;На закуску я оставил ложку дегтя - их ценовую политику. За пару недель
достаточно неактивного, "ознакомительного" использования счет легко
достиг отметки в пятьсот долларов. EC2 тарифицируется по часам - от 10
до 80 центов в час за виртуальную машину плюс трафик (более детально
можно посмотреть на все том же &lt;a href="https://www.insight-it.ru/goto/9662bc8a/" rel="nofollow" target="_blank" title="http://www.amazon.com/EC2-AWS-Service-Pricing/b/ref=sc_fe_l_2?ie=UTF8&amp;amp;node=201590011&amp;amp;no=3435361&amp;amp;me=A36L942TSJ2AJA"&gt;официальном сайте&lt;/a&gt;).
Там же и указаны гарантируемые вычислительные мощности и объем дискового
пространства и оперативной памяти. На практике же все остальные
параметры системы (пропускная способность сетевых интерфейсов, скорость
чтения/записи на диски и так далее) делятся между всеми виртуальными
машинами, располагаемыми на одной физической и по большей части это
происходит по принципу "как повезет", хотя наблюдаются и некоторые
закономерности: узлам за 40-80 центов/час дается явный приоритет при
доступе к дискам (что, впрочем, упоминается в их &lt;a href="https://www.insight-it.ru/goto/1b09ebb2/" rel="nofollow" target="_blank" title="http://docs.amazonwebservices.com/AWSEC2/2007-08-29/DeveloperGuide/"&gt;Developer Guide&lt;/a&gt;),
но, как оказалось, приоритет этот настолько высок, что скорость записи
отличается между ними более чем на порядок - в 15-20 раз, такое вот
несколько удивительное наблюдение. Интернет-канал же тоже делится -
ограничения сверху достичь не удалось, но есть предположение, что в
сумме "на всех" он равен гигабиту на физическую машину.&lt;/p&gt;
&lt;p&gt;В целом сервис производит достаточно положительные впечатления (если
закрыть глаза на цены) - быстро и удобно, да и сфера его использования
вовсе не ограничивается веб-проектами, его запросто можно приспособить и
к, скажем, научным исследованиям, связанным с моделированием
чего-нибудь, да и вообще к решению любых задач, требующих больших
вычислительных мощностей. Жалко, что не удалось поближе познакомится с
остальными веб-сервисами Amazon - они также кажутся достаточно
интересными, если взглянуть со стороны.&lt;/p&gt;
&lt;p&gt;Напоследок хочется напомнить, что подписаться на RSS &lt;a href="/feed/"&gt;никогда не поздно&lt;/a&gt;, а помочь развитию блога можно &lt;a href="https://www.insight-it.ru/guest-posts/"&gt;написав гостевой пост&lt;/a&gt;. А то сам я, как не трудно заметить, в последнее
время почти не справляюсь с относительно регулярным написанием новых
информативных постов...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Mon, 28 Jul 2008 20:35:00 +0400</pubDate><guid>tag:www.insight-it.ru,2008-07-28:linux/2008/amazon-web-services/</guid><category>Amazon</category><category>Amazon EC2</category><category>Amazon S3</category><category>Amazon SimpleDB</category><category>Amazon SQS</category><category>AWS</category><category>Debian</category><category>Fedora</category><category>Linux</category></item><item><title>Веб-сервер за два вечера</title><link>https://www.insight-it.ru//linux/2008/web-server-za-dva-vechera/</link><description>&lt;p&gt;&lt;img alt="Beastie" class="left" src="https://www.insight-it.ru/images/beastie.png" title="Beastie: The BSD Daemon"/&gt;
Многие из вас наверняка все еще помнят те времена, когда компьютерная
техника находилась лишь на ранней стадии своего развития. Позволить себе
иметь в личном распоряжении персональный компьютер мог далеко не каждый,
а о серверном оборудовании и вовсе не могло быть и речи.&lt;/p&gt;
&lt;p&gt;Но, к счастью, времена меняются, и на сегодняшний день покупка даже
серверного оборудования связана с достаточно скромными затратами,
сопоставимыми с бюджетом покупки настольного компьютера или ноутбука. Но
возникает другой вопрос - а что же с этим оборудованием делать? Вполне
логичным ответом было бы: "использовать по прямому назначению", о чем мы
с Вами сегодня и поговорим в компании с замечательным персонажем по
имени &lt;em&gt;&lt;a href="/tag/beastie/"&gt;Beastie&lt;/a&gt;&lt;/em&gt; и операционной системой
&lt;strong&gt;&lt;a href="/tag/freebsd/"&gt;FreeBSD&lt;/a&gt;&lt;/strong&gt;, с которой он частенько ассоциируется.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Под "использованием по прямому назначению" конечно же можно было
подразумевать множество разных применений, но я хотел все-таки
остановиться на варианте использования в роли веб-сервера, как
альтернативу многочисленным услугам по предоставлению shared и VPS
хостинга.&lt;/p&gt;
&lt;h3 id="predistoriia"&gt;Предистория&lt;/h3&gt;
&lt;p&gt;Некоторое время назад ко мне в руки попал простенький сервер, который
как раз предполагалось использовать как хостинг для одного из проектов.
Оставалось лишь сделать его пригодным для выполнения этой задачи.
Казалось бы дело это как минимум не тривиальное, но буквально через пару
дней мне довелось убедиться в обратном.&lt;/p&gt;
&lt;p&gt;Ассортимент оборудования, спрятанного внутри &lt;strong&gt;1U&lt;/strong&gt; корпуса, был вполне
стандартным, ничего особенного: процессор &lt;strong&gt;Intel Xeon 5335&lt;/strong&gt;,
оперативная память &lt;strong&gt;Kingston 2х2 GB ECC Full-buffered&lt;/strong&gt;, жесткий диск
изначально только один - &lt;strong&gt;WD 150 GB 10000rpm SATA&lt;/strong&gt;, а вот модель
материнской платы, к сожалению, на память назвать не могу, вроде что-то
от &lt;strong&gt;SuperMicro&lt;/strong&gt;, с простенькой встроенной видеокартой, сетевой картой
с двумя гигабитными Ethernet портами и встроенным же видимо software
RAID-контроллером. Опытный глаз наверняка заметил бы в этом списке
сильную недоукомплектацию, особенно проявляющуюся при упоминании
процессора в единственном числе, отсутствии RAID, и скромным объемам
оперативной памяти. Объясняется это достаточно просто - проект еще
предстоит тестировать перед запуском, а этой платформы для этого будет
более чем достаточно.&lt;/p&gt;
&lt;p&gt;Перед запуском проекта в открытое плавание естественно предстоит upgrade
оборудования.&lt;/p&gt;
&lt;h3 id="den-pervyi"&gt;День первый&lt;/h3&gt;
&lt;h4&gt;Подготовка&lt;/h4&gt;
&lt;p&gt;Если верить бумажкам, идущим в комплекте с сервером, на единственный
жестком диск в магазине установили демо-версию одной из серверных
операционных систем от одной мало кому известной корпорации. Смотреть
что это за зверь такой у меня особого желания не было, по-этому я не
долго думая пошел искать среди своей коллекции дистрибутивов болванку с
заранее выбранным &lt;a href="/tag/opensource/"&gt;opensource&lt;/a&gt; решением вопроса об
&lt;a href="/tag/os/"&gt;операционной системе&lt;/a&gt; - &lt;strong&gt;&lt;a href="/tag/freebsd/"&gt;FreeBSD 6.2&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Почему выбор пал именно на эту &lt;a href="/tag/os/"&gt;ОС&lt;/a&gt; объяснить не так уж и
просто, но я все же попробую. Выбор был достаточно классический:
&lt;em&gt;&lt;a href="/tag/unix/"&gt;Unix&lt;/a&gt; vs &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;&lt;/em&gt;, возникали еще некоторые
сомнения насчет решений от &lt;em&gt;Sun&lt;/em&gt; в виде &lt;em&gt;Solaris&lt;/em&gt; и &lt;em&gt;OpenSolaris&lt;/em&gt;, но от
них я отказался достаточно быстро в основном из-за более чем скромной
документации и проприетарного происхождения, попутно закрыв глаза на все
положительные отзывы, которые я видел в Сети.&lt;/p&gt;
&lt;p&gt;Так как мне хотелось иметь иметь перед собой &lt;em&gt;конструктор&lt;/em&gt; для сбора
системы именно таким образом, как было бы удобно мне, а не разработчикам
дистрибутива, то список вариантов, выступавших на стороне
&lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt; быстро начал сокращаться, начиная с &lt;strong&gt;CentOS&lt;/strong&gt;.
Предпоследним вычеркнутым из списка дистрибутивов &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;
был &lt;strong&gt;Debian&lt;/strong&gt;, что оставило в нем лишь &lt;a href="/tag/gentoo/"&gt;Gentoo Linux&lt;/a&gt;.
Финальный выбор между &lt;a href="/tag/freebsd/"&gt;FreeBSD&lt;/a&gt; и &lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt;
был сделан уже легче: во-первых, по &lt;a href="https://www.insight-it.ru/linux/2008/gentoo-linux-sony-vaio/"&gt;своему опыту с ноутбуком&lt;/a&gt; я уже понял, что с
&lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt; предстояло бы немало хлопот, а, во-вторых, в новый
&lt;em&gt;конструктор&lt;/em&gt;, как ни крути, "играть" намного интереснее, чем в старый,
так что долго думать не пришлось :)&lt;/p&gt;
&lt;h4&gt;Установка&lt;/h4&gt;
&lt;p&gt;Найдя наконец диск с &lt;a href="/tag/freebsd/"&gt;FreeBSD&lt;/a&gt;, я попытался решить
следующий возникший вопрос: а как же установить операционную систему с
компакт-диска на компьютер, не имеющий соответствующего привода? Так как
сервер был запломбирован и находился на гарантии, вариант частично
разобрать и подключить обычный привод отпал сразу же, ровно как и
вариант с подключением внешнего привода по причине его отсутствия.
Подходящее решение было найдено практически сразу же, благо жесткие
диски подключались по принципу hotswap: вытащив жесткий диск без
развинчивания корпуса, я подключил его к подвернувшемуся под руку
настольному компьютеру, обладающему DVD-приводом. Загрузка прошла
успешно и я приступил к установке, руководствуясь &lt;a href="https://www.insight-it.ru/goto/358a772c/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html"&gt;FreeBSD Handbook&lt;/a&gt;,
пересказывать его особого желания у меня нет, остановлюсь лишь на
некоторых особенностях этого процесса.&lt;/p&gt;
&lt;p&gt;Первым этапом установки, где пришлось задуматься, был &lt;strong&gt;fdisk&lt;/strong&gt;
(разбиение диска на так называемые &lt;em&gt;slice&lt;/em&gt;). Для избежания путаницы для
самого себя, я решил, что размещу рабочие директории http-сервера и базы
данных в &lt;strong&gt;/var&lt;/strong&gt;, которую и выделил в отдельный &lt;em&gt;slice&lt;/em&gt;, занимающий
б&lt;em&gt;о&lt;/em&gt;льшую часть доступного дискового пространства. В ассортимент
доступного при установке программного обеспечения я особо вникать не
стал, так как знал, что у меня всегда будет возможность заняться им
позже, и как следствие этого выбрал что-то очень близкое к стандартному
набору &lt;a href="/tag/po/"&gt;ПО&lt;/a&gt;.
Подтвердив установку и подождав достаточно непродолжительный период
времени, я перезагрузил систему, вытащив установочный диск в процессе.
Установка оказалась на удивление элементарной, что привело к полученной
с первой попытки работоспособной системе. Увидев долгожданное
приглашение к вводу логина и пароля я убедился, что могу
беспрепятственно получить доступ к консоли и сразу же выключил систему,
чтобы перенести жесткий диск обратно на сервер.&lt;/p&gt;
&lt;p&gt;Так как сетевое подключение еще только предстояло настроить, то на
сервер переносить пришлось не только жесткий диск, но и монитор с
клавиатурой. На новом оборудовании все так же прекрасно запустилось, и я
принялся за настройку подключения. Особых проблем не возникло - в
&lt;a href="https://www.insight-it.ru/goto/ecbcc1a6/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#NETWORK-COMMUNICATION"&gt;Handbook&lt;/a&gt;'е
все более чем качественно задокументировано, самым сложным был процесс
выбора драйвера, вернее осознавание того, что он изначально правильно
сам установился. Следующей маленькой проблемой было угадывание какой же
из &lt;em&gt;Ethernet&lt;/em&gt;-портов был только что настроен, и, соответственно,
подключение кабеля именно в него, а не в его соседа. После завершения
всех манипуляций я с радостью обнаружил, что &lt;strong&gt;ping&lt;/strong&gt; от сервера до
gateway'а успешно проходит, что по сути и означало окончание настройки
сетевого подключения.
Следущей целью было избавить себя от необходимости пользоваться
позаимствованными у другого компьютера клавиатурой и монитором. Дело
тоже оказалось достаточно нехитрым, &lt;strong&gt;sshd&lt;/strong&gt; установился и настроился
вполне самостоятельно где-то в процессе установки, от меня потребовалось
лишь создать дополнительного пользователя, написать нехитрую строчку в
&lt;strong&gt;rc.conf&lt;/strong&gt;: &lt;code&gt;sshd_enable="YES"&lt;/code&gt; и собственно запустить daemon'а. Этого
было вполне достаточно, чтобы набрав на своем &lt;a href="/tag/noutbuk/"&gt;ноутбуке&lt;/a&gt;
&lt;strong&gt;ssh&lt;/strong&gt; в консоли, с указанием необходимых параметров, получить
удаленный доступ к серверу по протоколу &lt;strong&gt;SSH&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Решив, что для начала этого будет вполне достаточно, я отправился по
другим делам, так как тот вечер еще даже не успел подойти к своему
завершению.&lt;/p&gt;
&lt;h3 id="den-vtoroi"&gt;День второй&lt;/h3&gt;
&lt;h4&gt;Программное обеспечение&lt;/h4&gt;
&lt;p&gt;Хорошо, вполне работоспособную &lt;a href="/tag/os/"&gt;операционную систему&lt;/a&gt; мы
получили. Осталось снабдить ее необходимым &lt;a href="/tag/po/"&gt;программным обеспечением&lt;/a&gt; для выполнения своих обязанностей, определенных
нами заранее.&lt;/p&gt;
&lt;p&gt;Прежде чем что-либо устанавливать, очень не пожалел, что ознакомился как
с соответствующим &lt;a href="https://www.insight-it.ru/goto/6ffb90d6/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#PORTS"&gt;разделом handbook'a&lt;/a&gt;,
так и с &lt;a href="https://www.insight-it.ru/goto/a3e92771/" rel="nofollow" target="_blank" title="http://www.freebsd.org/ports/"&gt;доступным ассортиментом ПО&lt;/a&gt;.
После этого я перешел-таки собственно к выбору и установке
&lt;a href="/tag/po/"&gt;ПО&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Так как одной из основных составных частей практически любого
    веб-сервера является http-daemon, именно с его выбора я и решил
    начать. Причем начал еще задолго до описываемых событий, вся
    многофункциональность &lt;a href="/tag/apache/"&gt;Apache&lt;/a&gt; мне была не нужна, а
    аналоги &lt;code&gt;mod_auth&lt;/code&gt; и &lt;code&gt;mod_rewrite&lt;/code&gt; есть и в более легких
    http-серверах. Cамо веб-приложение, которое там предполагалось
    располагать, работает по большей части на &lt;a href="/tag/php/"&gt;PHP&lt;/a&gt;, так что
    ничего особенного от httpd совсем не требовалось. В итоге финальный
    выбор был между &lt;em&gt;быстрыми&lt;/em&gt; и &lt;em&gt;легкими&lt;/em&gt; вариантами: &lt;strong&gt;&lt;a href="/tag/nginx/"&gt;nginx&lt;/a&gt;&lt;/strong&gt; и &lt;strong&gt;&lt;a href="/tag/lighttpd/"&gt;lighttpd&lt;/a&gt;&lt;/strong&gt;, какой-либо весомой причины по которой я выбрал &lt;strong&gt;&lt;a href="/tag/lighttpd/"&gt;lighttpd&lt;/a&gt;&lt;/strong&gt; с &lt;code&gt;mod\_fastcgi&lt;/code&gt; привести
    не могу, основным фактором был мой некоторый опыт работы с ним в
    прошлом, и отсутствие такового в отношении &lt;strong&gt;&lt;a href="/tag/nginx/"&gt;nginx&lt;/a&gt;&lt;/strong&gt;. Установка
    прошла легко и непринужденно с помощью в сжатые сроки найденного в
    &lt;a href="/tag/google/"&gt;Google&lt;/a&gt;
&lt;a href="https://www.insight-it.ru/goto/14d0519d/" rel="nofollow" target="_blank" title="http://www.cyberciti.biz/faq/howto-setup-lighttpd-fastcgi-php-server/"&gt;мануала&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Другим немаловажным компонентом сервера является &lt;strong&gt;ftpd&lt;/strong&gt;, как
    известно используемый для передачи файлов. Собственно говоря, если
    активное его использование не планируется, то особого значения какой
    именно сервер будет использоваться значения не имеет: любой из
    доступных устанавливается настраивается в пару простых шагов без
    каких-либо проблем (если это имеет значение - я выбрал &lt;strong&gt;vsftpd&lt;/strong&gt;,
    так как мне уже далеко не один раз доводилось его настраивать на
    домашних компьютерах, и, как следствие, даже инструкция не
    понадобилась). Но при потенциальной возможности работы через
    Интернет, этот протокол является достаточно уязвимым, так как не
    использует никакого шифрования. Эта проблема решается с помощью
    механизма &lt;em&gt;FTP over SSH&lt;/em&gt;, который представляет собой использование
    &lt;strong&gt;SSH&lt;/strong&gt; в роли туннеля для передачи файлов по &lt;strong&gt;FTP&lt;/strong&gt;. О том, как
    воспользоваться этим механизмом вам подскажет &lt;strong&gt;man ssh&lt;/strong&gt;,
    какой-либо дополнительной конфигурации он не требует, разве что
    настройки соответствующим образом firewall'а, но об этом я расскажу
    позже.&lt;/li&gt;
&lt;li&gt;Сам &lt;a href="/tag/php/"&gt;PHP&lt;/a&gt; установлен последней доступной в
    &lt;a href="https://www.insight-it.ru/goto/a3e92771/" rel="nofollow" target="_blank" title="http://www.freebsd.org/ports/"&gt;ports&lt;/a&gt; версии и , как уже
    упоминалось, был подключен к &lt;a href="/tag/lighttpd/"&gt;lighttpd&lt;/a&gt; с помощью
    &lt;code&gt;mod_fastcgi&lt;/code&gt;, какой-либо дополнительной конфигурации с моей
    стороны не потребовалось, я разве что выбрал список модулей (в
    общем-то тоже занятие не сложное, достаточно лишь осознавать какие
    именно используются, плюс я еще решил
    &lt;strong&gt;&lt;a href="https://www.insight-it.ru/goto/41a25ac6/" rel="nofollow" target="_blank" title="http://www.hardened-php.net/suhosin/"&gt;Suhosin&lt;/a&gt;&lt;/strong&gt; установить) и
    просто просмотрел по диагонали все конфиги (в основном сам
    &lt;strong&gt;php.ini&lt;/strong&gt; и &lt;strong&gt;lighttpd.conf&lt;/strong&gt;) на предмет их соответствия
    потребностям моего приложения. Отдельная история возникла с лишь
    одним модулем - &lt;em&gt;&lt;a href="/tag/blitz/"&gt;Blitz&lt;/a&gt;&lt;/em&gt;, который на данный момент все
    еще отсутствует в репозиториях как &lt;a href="/tag/freebsd/"&gt;FreeBSD&lt;/a&gt;, так и
    подавляющего большинства (если не всех) дистрибутивов
    &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;. Его пришлось устанавливать вручную из
    исходников по &lt;a href="https://www.insight-it.ru/goto/1e985790/" rel="nofollow" target="_blank" title="http://alexeyrybak.com/blitz/blitz_ru.html#install_config.install"&gt;соответствующему мануалу&lt;/a&gt;,
    что правда тоже дело не хитрое и заняло всего несколько минут.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="/tag/subd/"&gt;СУБД&lt;/a&gt;&lt;/strong&gt; особо выбирать не пришлось - приложение
    написано было с расчетом на &lt;strong&gt;&lt;a href="/tag/postgresql/"&gt;PostrgeSQL&lt;/a&gt;&lt;/strong&gt;, ее
    соответственно и прикручивал к &lt;strong&gt;&lt;a href="/tag/php/"&gt;PHP&lt;/a&gt;.&lt;/strong&gt; Этот этап был
    пожалуй одним из самых проблематичных, так как сразу после
    классического &lt;code&gt;make install clean&lt;/code&gt; соответствующий daemon
    запускаться отказался. Какого-либо осознанного сообщения об ошибке
    &lt;code&gt;/usr/local/etc/rc.d/postgresqld start&lt;/code&gt; не выводило как в консоль,
    так и в логи, но тем не менее консольный клиент &lt;strong&gt;psql&lt;/strong&gt; и само
    веб-приложение жаловались на отсутствие запущенной
    &lt;a href="/tag/subd/"&gt;СУБД&lt;/a&gt;. Этот факт сильно затруднял поиск возможных
    вариантов решения на просторах &lt;a href="/tag/internet/"&gt;Сети&lt;/a&gt;, так что не
    найдя ничего полезного я решил заняться диагностикой проблемы и
    поиском решения для нее самостоятельно. Методом проб и ошибок,
    перебрав множество возможных вариантов запуска daemon'а, я пришел к
    выводу, что у пользователя от имени которого он должен был
    запускаться явно проблемы с доступом к файловой системе. Видимо так
    получилось из-за нестандартного расположения самой базы данных - в
    директории &lt;strong&gt;/var&lt;/strong&gt;. Не смотря на тот факт, что &lt;strong&gt;chown&lt;/strong&gt; и
    &lt;strong&gt;chmod&lt;/strong&gt; были использованы по прямому назначению в отношении
    соответствующих директорий для установления прав доступа. В итоге
    оказалось, что директория указанная для этого пользователя как
    домашняя (по памяти пишу, могу ошибиться, но вроде
    &lt;strong&gt;/usr/local/pgsql&lt;/strong&gt;) по каким-то причинам не создалась и
    соответственно именно этот факт и мешал запуску daemon'а.
    Восстановив справедливость в отношении этого пользователя, я
    обнаружил, что &lt;strong&gt;&lt;a href="/tag/postgresql/"&gt;PostrgeSQL&lt;/a&gt;&lt;/strong&gt; успешно
    запустился-таки, а мое приложение тоже стало функционировать именно
    так, как ему было положено. Проверив содержимое соответствующего
    конфига, я решил его больше не трогать, а то как говорится
    "premature optimization is the root of all evil"&amp;amp;copyright;. За
    компанию решил установить веб-интерфейс к
    &lt;a href="/tag/postgresql/"&gt;PostrgeSQL&lt;/a&gt; - &lt;strong&gt;phppgadmin&lt;/strong&gt;. Собравшись из
    &lt;a href="https://www.insight-it.ru/goto/a3e92771/" rel="nofollow" target="_blank" title="http://www.freebsd.org/ports/"&gt;портов&lt;/a&gt;, он повел себя как-то не
    очень адекватно, совсем не так каким я привык его видеть у себя на
    &lt;a href="/tag/noutbuk/"&gt;ноутбуке&lt;/a&gt;, разбираться в причинах было не охота -
    простое копирование и замена соответствующей директории по &lt;em&gt;ftp&lt;/em&gt;
    буквально за минуту решило проблему.&lt;/li&gt;
&lt;li&gt;Вариантов фильтров сетевого трафика в &lt;a href="/tag/freebsd/"&gt;FreeBSD&lt;/a&gt;
    имеется предостаточно:
    &lt;a href="https://www.insight-it.ru/goto/b7a4c2f7/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#FIREWALLS-PF"&gt;pf&lt;/a&gt;,
    &lt;a href="https://www.insight-it.ru/goto/963bd5ec/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#FIREWALLS-IPF"&gt;ipf&lt;/a&gt;,
    &lt;a href="https://www.insight-it.ru/goto/aee50277/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#FIREWALLS-IPFW%22"&gt;ipfw&lt;/a&gt;.
    Опыта работы ни с одним из них у меня не было, так что выбор
    происходил из достаточно субъективных критериев - очевидности
    принципов работы правил и достаточности документации. Так как я был
    уверен, что каждый из них сможет обеспечить достаточный уровень
    безопасности, основываясь на указанных выше критериях в итоге я
    выбрал &lt;strong&gt;ipf&lt;/strong&gt;. Документация позволила легко и непринужденно все
    установить и настроить, правда за компанию пришлось разбираться и с
    &lt;a href="https://www.insight-it.ru/goto/420d629d/" rel="nofollow" target="_blank" title="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/book.html#KERNELCONFIG"&gt;пересборкой ядра&lt;/a&gt;.
    В качестве базы для построения собственного списка правил я
    использовал приведенный все там же, в документации, пример. Само
    собой пришлось доработать его под конкретную систему, но методом
    проб и ошибок эта задача выполняется достаточно быстро &lt;em&gt;(будте
    осторожны с 22 портом, используемым для SSH - очень легко на этом
    этапе случайно заблокировать самому себе доступ к серверу)&lt;/em&gt;.
    Получившийся в итоге список правил приводить не буду, так как его
    еще предстоит довести до ума на активно работающей системе.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="zakliuchenie"&gt;Заключение&lt;/h3&gt;
&lt;p&gt;Не прошло и двух дней, как из простого набора оборудования получился
вполне готовый к работе веб-сервер, конечно же доводить до ума его
придется еще достаточно долго, но просто стабильно работать он был в
состоянии уже тогда. Дальше его отвезли в место постоянного его
прибывания, подключили к более-менее приличному интернет-каналу, с моей
стороны при этом потребовалось лишь слегка поменять настройки сетевого
подключения, и вот - он уже доступен из Сети. Практически сразу
же обнаружился один мой недочет в плане выбора &lt;a href="/tag/po/"&gt;ПО&lt;/a&gt; - буквально
в первую же ночь после открытия публичного доступа к серверу нашлась
масса желающих попытаться подобрать по словарю логин и пароль для
доступа к серверу по SSH, но он был открыт лишь для одной учетной
записи, у которой было мягко говоря нестандартное имя пользователя, даже
его никто за ночь не смог угадать, а до более чем 20-символьного пароля
дело так и не дошло. На следующее утро я, не долго думая, установил
программу под названием &lt;strong&gt;&lt;a href="https://www.insight-it.ru/goto/d4707261/" rel="nofollow" target="_blank" title="http://www.freebsd.org/cgi/url.cgi?ports/security/sshguard/pkg-descr"&gt;sshguard&lt;/a&gt;&lt;/strong&gt;, которая сразу же предотвратила все последующие попытки подобным образом издеваться над сервером. Дальше надо было настроить запись на
DNS-сервере для ассоциации домена с IP нашего сервера, настроить почту,
закончить работу над самим веб-приложением и много чего еще, но это уже
совсем другая история.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Thu, 14 Feb 2008 15:59:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-02-14:linux/2008/web-server-za-dva-vechera/</guid><category>Beastie</category><category>FreeBSD</category><category>lighttpd</category><category>PostgreSQL</category><category>Unix</category><category>веб-сервер</category><category>операционная система</category><category>сервер</category><category>системное администрирование</category></item><item><title>Первые впечатления от релиза KDE 4</title><link>https://www.insight-it.ru//linux/2008/pervye-vpechatleniya-ot-reliza-kde-4/</link><description>&lt;p&gt;&lt;img alt="KDE Icon" class="right" src="https://www.insight-it.ru/images/kde.png" title="K Desktop Environment"/&gt;&lt;/p&gt;
&lt;p&gt;Вчера вечером, решив провести очередное обновление программного
обеспечения, я обнаружил в списке
&lt;a href="https://www.insight-it.ru/goto/6e1a83f0/" rel="nofollow" target="_blank" title="http://gentoo-wiki.com/Masked"&gt;замаскированных&lt;/a&gt; пакетов внушительное
количество заветных цифр &lt;em&gt;4.0.0&lt;/em&gt;. Не долго думая все эти пакеты были
отправлены в комментарии с целью разрешить их установку, а на ночь
компьютер был оставлен включенным с указанием к утру предоставить мне
рабочую версию &lt;a href="/tag/kde-4/"&gt;KDE 4&lt;/a&gt;. И, как ни странно, с заданием он
справился более чем успешно!&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;На утро если честно был слегка удивлен. увидев сообщение в консоли о
том, что пакет &lt;strong&gt;kde-base/kdebase-meta-4.0.0&lt;/strong&gt; установлен успешно.
Запустив по привычке &lt;strong&gt;etc-update&lt;/strong&gt; и сделав на всякий случай backup
настроек третьего &lt;a href="/tag/kde/"&gt;KDE&lt;/a&gt;, я приступил к запуску
свежеустановленного рабочего окружения.&lt;/p&gt;
&lt;p&gt;Процесс оказался простым до безобразия, достаточно было лишь сменить тип
сессии в &lt;strong&gt;kdm&lt;/strong&gt;, и рабочее окружение успешно загрузилось. Представшее
передо мной зрелище меня ничуть не удивило - мне уже доводилось собирать
beta-версию &lt;a href="/tag/kde-4/"&gt;KDE 4&lt;/a&gt; из SVN, да и screenshot'ы стандартного
рабочего окружения KDE я видел далеко не один раз.&lt;/p&gt;
&lt;p&gt;Первым делом я решил запустить Kopete, реально конечно из-за того, что
перед завершением сеанса работы с третьим KDE мне кто-то успел написать
в ICQ, и меня ждал неоконченный разговор, но посмотреть как он изменился
со времен беты тоже хотелось. Попытавшись зайти с его помощью в ICQ, я
обнаружил что этого протокола в списке доступных нет, причина нашлась
быстро с помощью консоли (которая изменений практически не претерпела) -
&lt;strong&gt;kopete&lt;/strong&gt; по-умолчанию был собран без флага &lt;strong&gt;oscar&lt;/strong&gt;. Не долго думая,
по-быстрому пересобрал клиент, но в ходе указания настроек account'а он
мне заявил, что ему нужен еще и &lt;strong&gt;KWallet&lt;/strong&gt; для хранения пароля.
Отправив на сборку и его, я решил временно отложить повторное знакомство
с &lt;strong&gt;kopete&lt;/strong&gt; и запустил &lt;strong&gt;Pidgin&lt;/strong&gt;, которым достаточно часто пользуюсь.&lt;/p&gt;
&lt;p&gt;После решения вопроса со связью, я отправился на изучения остальных
пунктов &lt;strong&gt;KMenu&lt;/strong&gt;, ничего принципиально нового я там не нашел, но решил
все же заглянуть в пункт под названием &lt;em&gt;System Settings&lt;/em&gt; с целью сделать
небольшой обзор доступных настроек и оценить потенциал нового рабочего
рабочего окружения в плане "доработки напильником", чем я и планирую в
обозримом будущем заняться. Большую часть интересных для меня настроек я
нашел прямо в GUI, а если бы не поленился покопаться в конфигурационных
файлах - нашел бы и все остальное.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Plasma&lt;/strong&gt; - по-моему одно из самых существенных изменений в новой
версии KDE, в котором невооруженным глазом можно увидеть огромный
потенциал для развития пользовательских интерфейсов. Но если сейчас
смотреть на эту технологию как обычный пользователь, то можно увидеть во
всех эти widget'ах лишь недоделанность, неудобство и непривычность. В
будущем, когда ассортимент и качество "плазмоидов" приумножится, эта
технология станет очень гибкой и удобной в повседневном использовании
для очень разнообразного спектра задач.&lt;/p&gt;
&lt;p&gt;Самым большим недостатком доступной на данный момент версии
&lt;a href="/tag/kde/"&gt;KDE&lt;/a&gt;, на мой взгляд, является та самая черная панель внизу
экрана, которая используется для размещения любых виджетов наравне с
рабочим столом, но имеет один большой недостаток - практически полное
отсутствие каких-либо настроек (за исключением непонятно зачем и кому
нужного "Show tooltips"), и как следствие, отсутствие элементарных
способов ее переместить или изменить в размерах. Именно из-за этого
факта я сейчас и пишу снова из KDE 3.5.8, так как я слишком привык
получать доступ ко всем функциям рабочего окружения из верхней части
экрана, а переучиваться или искать какие-либо нестандартные решения этой
небольшой проблемки на данный момент нет ни времени, ни желания.&lt;/p&gt;
&lt;p&gt;По не помню какой причине мне пришлось залезть в файловую систему,
сделал я это естественно с помощью &lt;strong&gt;Dolphin&lt;/strong&gt;, но сам факт осознал
далеко не сразу: настолько привычен и удобен оказался его интерфейс, что
мне показалось, что я всю жизнь всегда им пользовался, хотя на самом
деле по большому счету увидел его впервые.&lt;/p&gt;
&lt;p&gt;В целом новинка произвела по большей части положительные впечатления,
обязательно вернусь к ее освоению через какое-то время, когда хотябы
существенные недоработки будут тем или иной способом исправлены. Так что
пока даже не стал ее удалять, тем более отдельными приложениями можно
пользоваться и из KDE 3, что я сейчас с удовольствием и делаю в
отношении нового Kopete, который в итоге прекрасно запустился и работает
существенно лучше чем многие другие ICQ-клиенты.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Thu, 24 Jan 2008 19:17:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-24:linux/2008/pervye-vpechatleniya-ot-reliza-kde-4/</guid><category>gentoo</category><category>KDE</category><category>kde 4</category><category>kde4</category><category>Linux</category><category>впечатления</category></item><item><title>Gentoo Linux + Sony Vaio = ♥</title><link>https://www.insight-it.ru//linux/2008/gentoo-linux-sony-vaio/</link><description>&lt;blockquote&gt;
&lt;p&gt;Gentoo is all about choices&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Gentoo Linux" class="left" src="https://www.insight-it.ru/images/gentoo.png" title="Gentoo Linux"/&gt;&lt;/p&gt;
&lt;p&gt;Абсолютно не важно, держите ли Вы в руках блестящую болванку с надписью
&lt;em&gt;"Прощай, предустановленная Vista!"&lt;/em&gt; или только подумываете о том, чтобы
избавить свой ноутбук от тяжести этой ноши. Прочитав это повествование,
Вы сможете представить себе процесс установки альтернативной
операционной системы на ноутбук на примере &lt;em&gt;&lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt;
&lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;&lt;/em&gt; и &lt;em&gt;&lt;a href="/tag/sony-vaio/"&gt;Sony Vaio&lt;/a&gt;&lt;/em&gt;. Я постараюсь
освятить все особенности этого процесса, а также по возможности дать
советы по избежанию потенциальных проблем. Не надейтесь найти здесь
пересказ &lt;a href="https://www.insight-it.ru/goto/760b4056/" rel="nofollow" target="_blank" title="Gentoo Hanbook"&gt;Gentoo
Handook&lt;/a&gt;,
ее стоит прочитать в любом случае, если Вы на самом деле задумали
установить эту очень серьезную &lt;a href="/tag/os/"&gt;операционную систему&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Сам я занимался этим делом уже более полугода назад на ноутбуке &lt;strong&gt;Sony
Vaio VGN-FE41ZR&lt;/strong&gt;, не знаю почему мой выбор в свое время пал именно на
эту модель, были доступны и более производительные и "навороченные" -
видимо приглянулась она мне чем-то. Далее речь пойдет именно об этой
модели ноутбука, но думаю большая часть написанного далее будет
справедлива и для других моделей линейки &lt;a href="/tag/sony-vaio/"&gt;Sony Vaio&lt;/a&gt;.
Поначалу процесс установки и настройки был очень непрост, ведь часто
приходилось пользоваться методом "проб и ошибок", да и достойную
документацию найти удавалось далеко не по каждому вопросу. Все про все
заняло далеко не один мой летний вечер, терпения потребовалось изрядное
количество, но полученный в итоге результат до сих пор не дает повода
пожалеть о потраченном свободном времени.&lt;/p&gt;
&lt;p&gt;Как я уже успел намекнуть во вступлении, начинается все с болванки на
которую записан &lt;a href="https://www.insight-it.ru/goto/3438dd73/" rel="nofollow" target="_blank" title="http://www.gentoo.org/main/ru/where.xml"&gt;тот самый волшебный
образ&lt;/a&gt;. Никто не мешает выбрать
любой из доступных вариантов, но предположим, что выбор пал на
&lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt; &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt; LiveCD 2007.0. Загрузка
ноутбука с этого диска проходит плавно и непринужденно, ровно как и сама
работа с уже загруженным LiveCD как в консоли, так и в используемом там
рабочем окружении - &lt;em&gt;Gnome&lt;/em&gt;. Следуя инструкциям из &lt;em&gt;настольной книги&lt;/em&gt;
начать установку операционной системы очень нетрудно, но если честно у
меня прочитав пару раз этот немаленьких размеров текст возникла мысль
попытаться сэкономить некоторое количество времени, воспользовавшись
услугами двух предложенных автоматических инсталляторов - с графическим
и консольным пользовательским интерфейсом - не повторяйте этой ошибки,
так как качество реализации обоих вариантов на данный момент оставляет
желать лучшего, заставить успешно установить систему один из них может
занять ничуть не меньше времени, чем ручная установка. Лично мне
приручить ни один из автоматических инсталлятора так и не удалось, но
как ни странно тоже не пришлось жалеть об этом факте - как оказалось
ручная установка очень качественно позволяет разобраться в структуре
&lt;a href="/tag/os/"&gt;операционной системы&lt;/a&gt; вцелом, ровно как и в принципе работы
отдельных ее компонентов.&lt;/p&gt;
&lt;p&gt;Следовать инструкциям из &lt;em&gt;Книги&lt;/em&gt; я думаю у всех должно неплохо
получаться, единственное что могу порекомендовать: делайте это
неторопясь, стараясь как можно подробнее осознавать что, как и зачем Вы
делаете. Здесь же я хочу останавливаться лишь на специфических моментах
для этой модели ноутбуков.&lt;/p&gt;
&lt;h3 id="iadro"&gt;Ядро&lt;/h3&gt;
&lt;p&gt;Как известно, для &lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt; доступно несколько вариантов
ядер, в процессе установки мой выбор пал на &lt;strong&gt;suspend2-sources&lt;/strong&gt;, но со
временем полностью перебрался на &lt;strong&gt;gentoo-sources&lt;/strong&gt;, так как я понял,
что сами suspend-to-ram и suspend-to-hdd мне абсолютно не нужны, но
suspend2 слегка отстают от gentoo по версиям. Тем более, насколько я
знаю, в современных версиях основной ветки ядра suspend тоже
поддерживается на достойном уровне (но так как мне он не нужен -
пробовать на собственном опыте не доводилось).&lt;/p&gt;
&lt;p&gt;Поначалу осознать как именно необходимо настроить ядро довольно
непросто, часто забываешь какой-нибудь драйвер или маленькую опцию,
сильно влияющую на ту или иную часть системы, или наоборот включаешь
множество абсолютно бесполезных компонентов. Вариантов решения этой
ситуации есть несколько:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Просто скопировать ядро с LiveCD.&lt;/em&gt; Этот вариант является самым
    простым в плане реализации, систему с его помощью запустить вполне
    реально - пробовал, но в плане производительности ему до идеала
    о-о-очень далеко.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Собрать ядро с помощью &lt;strong&gt;genkernel&lt;/strong&gt; и стандартной его
    конфигурации.&lt;/em&gt; Прочитав &lt;strong&gt;man genkernel&lt;/strong&gt; это занятие тоже
    становится простым и привычным. Именно этот вариант я и выбрал в
    первый раз, слегка подредактировав конфигурационный файл с помощью
    &lt;strong&gt;&amp;ndash;&amp;ndash;menuconfig&lt;/strong&gt; в тех местах, где был точно уверен что это не
    повлияет на функциональность и положительно повлияет на
    производительность. Естественно этот вариант тоже годится только на
    первое время.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ручная сборка классическим способом - &lt;strong&gt;make&lt;/strong&gt;, с использованием
    конфигурационного файла, взятого с LiveCD&lt;/em&gt;. Чисто теоретически
    возможно, но не могу порекомендовать этот способ, при его реализации
    возникает существенно больше проблем, до конца решить которые мне
    так и не удалось в процессе установки, а в последующем как-то не
    возникало желания возвращаться к ручной сборке ядра, так как привык
    к &lt;strong&gt;genkernel&lt;/strong&gt; - просто и удобно.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Метод "проб и ошибок".&lt;/em&gt; Если есть желание и возможность потратить
    существенное количество времени на подбор оптимальной конфигурации
    ядра прямо в процессе установки - почему бы этим и не заняться?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Вне зависимости от выбранного варианта сборки ядра, рано или поздно Вы
получите успешно загружающуюся без помощи LiveCD систему (естественно
имеется ввиду, что в консоль, о X-ах говорить еще рано), о которой и
пойдет речь дальше.&lt;/p&gt;
&lt;h3 id="set"&gt;Сеть&lt;/h3&gt;
&lt;p&gt;Первым делом, конечно же появляется желание выползти на просторы Сети,
даже скорее не желание, а необходимость, ведь жизнь компьютера без Сети
хоть и возможна, но грустна и нелегка.&lt;/p&gt;
&lt;p&gt;Как известно, у большинства ноутбуков дорога в Сеть может пролегать по
трем маршрутам:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Сетевая карта - Ethernet&lt;/li&gt;
&lt;li&gt;Беспроводная сеть - WiFi&lt;/li&gt;
&lt;li&gt;Старый-добрый модем&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Из всех трех вариантов мне довелось опробовать только первые два,
испытать модем в полевых условиях, к сожалению, не удалось в связи с
отсутствием как возможности, так и желания.&lt;/p&gt;
&lt;h4&gt;Ethernet&lt;/h4&gt;
&lt;p&gt;Воткнув заветный штекер RJ45 в соответствующий разъем, я с удивлением
обнаружил с помощью команды &lt;strong&gt;ifconfig&lt;/strong&gt;, что на этом мои телодвижения
по получению доступа в Интернет благополучно закончились. Все драйвера
оказались на месте, DHCP-клиент без моего вмешательства получил
IP-адрес, все необходимые настройки по-умолчанию были выбраны верно -
вобщем в этом плане все отлично.&lt;/p&gt;
&lt;p&gt;Конечно далеко не у всех локальная сеть организована таким же образом,
как и у меня, возможно придется поизучать man &lt;strong&gt;ifconfig&lt;/strong&gt;'а или
повозиться с VPN-соединением.&lt;/p&gt;
&lt;h4&gt;WiFi&lt;/h4&gt;
&lt;p&gt;С беспроводным соединением все прошло далеко не так гладко, как хотелось
бы. Первой задачей стояло определение того, какой же драйвер необходим
для функционирования соответствующего устройства. Вариантов ответа на
этот вопрос в Сети нашлось множество, но какой именно подошел бы
именно к моей модели ноутбука было как минимум не очевидно.&lt;/p&gt;
&lt;p&gt;Попробовав несколько вариантов, мне удалось-таки установить беспроводное
соединение с помощью драйвера под названием &lt;strong&gt;ipw3945&lt;/strong&gt; и сопутствующего
ему daemon'а &lt;strong&gt;ipw3945d&lt;/strong&gt;. Подробно весь процесс описывать не буду, я
думаю при необходимости подробную инструкцию найти особого труда не
составит.&lt;/p&gt;
&lt;p&gt;Я еще не упоминал, что в качестве рабочего окружения предпочитаю
использовать KDE, как-то с самого начала к нему привык, как внешне так и
внутренне он меня более чем устраивает. Не сочтите предыдущее
предложение за отступ от темы, я всеголишь хотел как-то объяснить
переход к разговору об утилите, предоставляющей GUI к работе с
беспроводными соединениями, - &lt;strong&gt;KWifiManager&lt;/strong&gt;. Утилитка достаточно
своеобразная, манера ее поведения поначалу сильно удивляла, но со
временем привыкаешь. Особенно странно она производит выбор беспроводной
сети, к которой подключаться. Не смотря на установленную в настройках
мою домашнюю сеть, как сеть по-умолчанию, она все равно частенько
пытается залезть к соседям или еще куда. И что самое интересное -
вернуть ее на &lt;em&gt;путь истинный&lt;/em&gt; ее же средствами мне обычно так и не
удается. Из-за этого пришлось написать bash-скрипт, который помогает
укратить эту утилиту. Включать в текст записи его особо желания нету,
если кто хочет его заполучить: оставьте соответствующий комментарий -
выложу.&lt;/p&gt;
&lt;h3 id="alternativa-konsoli"&gt;Альтернатива консоли&lt;/h3&gt;
&lt;p&gt;Консоль - штука конечно полезная, но со временем пользоваться только ей
на домашнем компьютере все же надоедает, хочется чего-то большего -
например, компании состоящей из X-сервера, Xorg и какого-либо рабочего
окружения (как я уже успел упомянуть - в его роли я предпочитаю
использовать &lt;a href="/tag/kde/"&gt;KDE&lt;/a&gt;, о нем и буду дальше говорить, но Ваш выбор
это естественно ни капли не ограничивает).&lt;/p&gt;
&lt;p&gt;Проблем как ни странно с этим пунктом нашей программы не возникло
никаких - официальная документация по этому поводу обширна, и чуть ли не
гарантированно приводит к положительным результатам. Все прекрасно
собирается (правда долговато) и не менее прекрасно работает.&lt;/p&gt;
&lt;p&gt;Одно время конечно возникали некоторые трудности, например в одной из
версий X-сервера была неприятная недоработка с LED'ами на клавиатуре -
не было видно нажат ли Caps Lock, или при одной конкретной комбинации
программного обеспечения и ядра системы по странному стечению
обстоятельств частоиспользуемая клавиша &lt;strong&gt;F2&lt;/strong&gt; приводила к сворачиванию
X-сервера и возвращению в консоль, что тоже доставляло массу неудобств.
На данный же момент все проблемы такого рода решены руками огромного
&lt;a href="/tag/opensource/"&gt;opensource&lt;/a&gt;-сообщества и все снова замечательно
работает точно также как и полгода назад сразу после установки системы.&lt;/p&gt;
&lt;p&gt;Через некоторое время после установки &lt;a href="/tag/kde/"&gt;KDE&lt;/a&gt; мне все же
захотелось привести его в более приятный моим глазам внешний вид.
Вооружившись любимым графическим редактором под названием &lt;strong&gt;The GIMP&lt;/strong&gt; я
принялся за дело. В итоге получилось нечто странное, которое выглядит
примерно вот так:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" class="responsive-img" src="https://www.insight-it.ru/images/screenshot-desktop.jpg" title="KDE 3.5.8 Screenshot"/&gt;&lt;/p&gt;
&lt;h3 id="video"&gt;Видео&lt;/h3&gt;
&lt;p&gt;Используемый по-умолчанию видеодрайвер &lt;em&gt;vesa&lt;/em&gt; оставляет желать лучшего,
этот факт заметен сразу же после первой загрузки рабочего окружения, а
значит ничего не остается кроме как искать ему замену. Искать долго не
придется - отличный видеодрайвер для присутствующей в внутри этого
ноутбука &lt;em&gt;Nvidia GeForce 7600&lt;/em&gt; легко доступен через Portage, называется
он, как ни странно, &lt;strong&gt;nvidia-drivers&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Впечатления он оставляет только положительные: легко настраивается,
достаточно производительный, поддерживает множество технологий, в том
числе пресловутый Composite Extension в Xorg, который необходим для
работы большинства (если не всех) трехмерных приложений.&lt;/p&gt;
&lt;h3 id="audio"&gt;Аудио&lt;/h3&gt;
&lt;p&gt;С ним все еще проще - достаточно лишь не забыть включить &lt;strong&gt;ALSA&lt;/strong&gt; и
&lt;strong&gt;Intel HD Audio&lt;/strong&gt; в конфигурации ядра.&lt;/p&gt;
&lt;p&gt;Качество конечно не идеальное, но для такого класса устройств звук
вполне "на уровне", для просмотра фильмов и негромкого воспроизведения
музыки более чем достаточно.&lt;/p&gt;
&lt;h3 id="bluetooth"&gt;Bluetooth&lt;/h3&gt;
&lt;p&gt;Синий зуб прекрасно чувствует себя под руководством встроенного в ядра
драйвера &lt;strong&gt;BlueZ&lt;/strong&gt;, с работой в качестве GUI для работы с этим
устройством также неплохо справляются KDE'шные утилиты KBluetooth и
компания.&lt;/p&gt;
&lt;p&gt;На роль помощника в тестировании и настройке bluetooth'а я не смог
придумать ничего лучше, чем выбрать свой старенький телефон &lt;em&gt;Qtek S200&lt;/em&gt;.
Передача файлов заработала безукоризненно в обоих направлениях, а вот с
использованием телефона в роли GPRS-модема пришлось изрядно повозиться:
узнать необходимые настройки соединения на сайте оператора, найти хотябы
примерно подходящую документацию по данному вопросу, настроить все как
положено. Когда дело дошло до процесса дозвона по указанному номеру,
телефон по каким-то причинам отказывался реагировать на запросы
компьютера. Попытки понять в чем же причина длились достаточно долго,
пока я не наткнулся в интернете на подробное техническое описание своего
телефона, где было сказано, что он просто-напросто не поддерживает
доступ у своему GPRS-модему через bluetooth-соединение. Узнав об этом
факте я решил больше себя не мучать и бросил эту затею, но чисто
технически с другим телефоном оно должно было заработать, но на практике
проверить руки так до сих пор и не дошли.&lt;/p&gt;
&lt;h3 id="raznye-melochi"&gt;Разные мелочи&lt;/h3&gt;
&lt;p&gt;Устав от продолжительной установки и настройки системы, на вещи,
которыми я не планировал активно пользоваться, я не тратил много
времени, по-этому упомяну их лишь вкратце.&lt;/p&gt;
&lt;p&gt;Очень удивил меня тот факт, что для приведения к жизни различных
нестандартных кнопок вроде регулировки громкости, S1, S2 и Fn необходима
достаточно серьезная "работа напильником": модули ядра вроде &lt;strong&gt;sonypi&lt;/strong&gt;
способны оживить их лишь частично, для полного их функционирования
возможно придется изрядно покопаться в конфигурационных файлах, а также
написать/найти некоторое количество bash-скриптов. Надеюсь в будущем
найду в себе силы довести это дело до конца, правда особого дискомфорта
от ненастроенных кнопок я не испытываю - не успел к ним привыкнуть, да и
реализованного на уровне оборудования mute sound мне вполне хватает.&lt;/p&gt;
&lt;p&gt;Регулировка яркости дисплея работает прекрасно через консоль с помощью
утилиты &lt;strong&gt;nvclock&lt;/strong&gt;, но какого-либо GUI к ней мне найти не удалось, т.к.
особой необходимости в этом не испытываю - все равно предпочитаю держать
экран максимально ярким, лишь в очень редких случаях возникает
необходимость его приглушить, но в таких случаях обычно проще бывает
нажать &lt;strong&gt;Alt+F2&lt;/strong&gt; и набрать необходимую команду.&lt;/p&gt;
&lt;p&gt;Встроенная камера заслуживает отдельного разговора. С одной стороны
драйвера под нее есть и легко доступны, весь необходимый набор модулей
для ядра - &lt;strong&gt;v4l, gspcav1&lt;/strong&gt;, установить абсолютно не проблема. Найдя
неплохую статейку в вики я достаточно быстро разобрался с их установкой,
но после этого возник вопрос: а зачем оно собственно говоря надо? Как
оказалось, камера является абсолютно бесполезным для меня device'ом, и я
даже не придумал никакого адекватного способа проверить ее
работоспособность. Так эти драйвера и находятся установленными в системе
непонятно зачем.&lt;/p&gt;
&lt;p&gt;Порт IEEE 1394 aka FireWire опробовать в действии не удалось, так как я
не являюсь обладателем устройств, его использующих, но я не вижу
каких-либо причин для того, чтобы он не работал: если мне не изменяет
память, то он фигурировал в настройках ядра наравне с USB, который
замечательно работает.&lt;/p&gt;
&lt;p&gt;Cardreader'ов в комплекте было два - один встроенный для MemoryStick, и
внешний в 34мм-слот для SD/MMC. Насчет первого не могу ничего сказать,
так как карточек таких у меня не нашлось, а второй отлично определился
без каких-либо дополнительных действий с моей стороны.&lt;/p&gt;
&lt;p&gt;Про DVD-привод, miniJack и прочие стандартные вещи наверное и упоминать
смысла нет - с ними все в порядке.&lt;/p&gt;
&lt;h3 id="podvedem-itogi"&gt;Подведем итоги&lt;/h3&gt;
&lt;p&gt;Как Вы уже успели заметить, в целом процесс установки этого одного из
самых "сложных" дистрибутивов &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt; на ноутбук является
далеко не элементарной задачей. Когда я писал этот текст, передо мной не
стояло задачи убедить как можно больше читателей последовать по тому
пути, что выбрал я и стать активным пользователем операционной системы
под гордым названием &lt;em&gt;&lt;a href="/tag/gentoo/"&gt;Gentoo&lt;/a&gt; &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;&lt;/em&gt;, я
всеголишь хотел показать Вам выбор, который стоит перед каждым
пользователем персональных компьютеров, как настольных, так и
портативных.&lt;/p&gt;
&lt;p&gt;На закуску я хотел бы поделиться своими впечатлениями насчет активной
эксплуатации такой системы на протяжении достаточного длительного
периода времени. Промолчав про несравнимую производительность и
стабильность, сразу перейду к тому, как я использую свой ноутбук: в
основном для меня он просто является устройством, позволяющим
пользоваться всем разнообразием услуг Сети: общаться, получать
разного рода информацию, делиться информацией. Помимо этого я
подрабатываю программированием на некоторых языках программирования, а
также удаленным администрированием. Для каждой из этих задач существует
огромнейший набор вариантов воплощения их в жизнь, и выбор каким из них
мне пользоваться в каждой конкретной ситуации остается за мной, за
&lt;em&gt;пользователем&lt;/em&gt;, а не за производителями программного обеспечения,
которые навязывают своим клиентам свои решения.&lt;/p&gt;
&lt;p&gt;Закончить хотелось бы той же цитатой из &lt;em&gt;Gentoo Handbook&lt;/em&gt;, которую я
использовал в эпиграфе к этой статье: &lt;em&gt;"Gentoo is all about choices."&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Tue, 22 Jan 2008 01:06:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-22:linux/2008/gentoo-linux-sony-vaio/</guid><category>gentoo</category><category>gentoo linux</category><category>Linux</category><category>notebook</category><category>opensource</category><category>sony</category><category>sony vaio</category><category>sony vaio fe41zr</category><category>sony vaio vgn-fe41zr</category><category>линукс</category><category>ноутбук</category><category>ОС</category></item><item><title>KDE 4 увидел свет</title><link>https://www.insight-it.ru//linux/2008/kde-4-uvidel-svet/</link><description>&lt;p&gt;&lt;img alt="KDE Icon" class="right" src="https://www.insight-it.ru/images/kde.png" title="K Desktop Environment"/&gt;&lt;/p&gt;
&lt;p&gt;Наконец-то наступил тот самый день, которого так долго ждали многие
пользователи различных дистрибутивов Linux и многих других unix-like
операционных систем. Да-да, сегодня вышла новая major-версия знаменитого
K Desktop Environment под номером 4.0!&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Вкратце перескажу &lt;a href="https://www.insight-it.ru/goto/2bdfca56/" rel="nofollow" target="_blank" title="http://www.kde.org/announcements/4.0/index.php"&gt;оффициальный пресс-релиз&lt;/a&gt;:
- Набор библиотек, лежащих в основе KDE, был кардинальным образом
переделан, изменения произошли в каждой из них. Появилось два новых
framework'а: один мультимедийный.- Phonon, а второй - Solid - для
интеграции интерфейса для работы с используемым оборудованием в рабочее
окружение.
- Рабочий стол KDE приобрел новую оболочку под названием Plasma, которая
поддерживает огромное количество widget'ов, эффектов и прочих
украшательств.
- Все программное обеспечение, входящее в его состав также не осталось без
изменений (немного от себя: лично мне больше всего понравились изменения
в Kopete - единственный icq клиент под *nix, в котором появилась
возможность использования x-status, которой сильно не хватало, успел
заценить его еще некоторое время назад в beta-версии KDE 4). Помимо
Konqueror появился новый файловый менеджер под названием Dolphin и
просмотрщик документов Okular (основанный на KPDF, но поддерживающий
существенно большее количество форматов документов).
- Тема рабочего окружения, используемая по-умолчанию также изменилась и
называется она теперь Oxygen, на вкус и цвет конечно, но я думаю
найдется много людей, которым она прийдется по душе.&lt;/p&gt;
&lt;p&gt;&lt;img alt="KDE4 Screenshot" class="responsive-img" src="https://www.insight-it.ru/images/kde-desktop-thumb.jpg" title="KDE 4.0 Screenshot"/&gt;&lt;/p&gt;
&lt;p&gt;Вот так вот примерно выглядит новинка в стандартном варианте оформления,
естественно практически безграничные возможности по модификации
пользовательского интерфейса не только никуда не делись, а только
преувеличились.&lt;/p&gt;
&lt;p&gt;На личном опыте новый релиз я опробовать еще не успел, но планирую этим
делом заняться в ближайшем будующим, наверное сразу же как появятся
ebuild'ы для Gentoo. После чего несомненно поделюсь с Вами
впечатлениями.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Fri, 11 Jan 2008 21:37:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-11:linux/2008/kde-4-uvidel-svet/</guid><category>KDE</category><category>Linux</category><category>Unix</category><category>ПО</category><category>программное обеспечение</category></item><item><title>Unix way</title><link>https://www.insight-it.ru//linux/2008/unix-way/</link><description>&lt;p&gt;На эту тему в Сети можно найти несметное количество статей и обсуждений,
не удивлюсь если Вам уже доводилось читать что-либо подобное в прошлом
или может быть работать в одной из множества операционных систем,
разработанных с использованием этой идеологии. За этим словосочетанием
скрывается целая философия разработки программного обеспечения, начавшая
свое развитие в середине 90-х годов прошлого века и воплощенная в
огромном количестве операционных систем и в еще большем количестве
&lt;a href="/tag/opensource/"&gt;opensource&lt;/a&gt; проектов. В этом тексте я хочу поведать
Вам свой взгляд на эту философию с двух точек зрения: программиста и
пользователя.&lt;/p&gt;
&lt;p&gt;Наиболее точно охарактеризовать то, о чем пойдет речь можно лишь
процитировав одного из основателей традиций &lt;a href="/tag/unix/"&gt;Unix&lt;/a&gt; и
разработчика &lt;a href="/tag/tekhnologiya/"&gt;технологии&lt;/a&gt; под названием "Unix
pipes" - &lt;a href="https://www.insight-it.ru/goto/7c67426e/" rel="nofollow" target="_blank" title="http://www.cs.dartmouth.edu/~doug/"&gt;Douglas'а Mcllroy'а&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"This is the Unix philosophy:
- Write programs that do one thing and do it well.
- Write programs to work together.
- Write programs to handle text streams, because that is a universal interface."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;
&lt;p&gt;Для начала воспроизведу суть цитаты для тех читателей, кто возможно не
знает в достаточной степени английского языка:&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Философия написания программ для &lt;a href="/tag/unix/"&gt;Unix&lt;/a&gt; заключается в
написании программ, качественно решающих строго одну задачу, но при этом
тесно работающих вместе. В качестве стандартного универсального
интерфейса между ними предлагается использование стандартных потоков
текстовых данных.&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;Сразу же позволю себе слегка отойти от темы, упомянув что существует
также и абсолютно противоположный подход к написанию программного
обеспечения, который стоит упомянуть для того, чтобы "почувствовать
разницу". Он используется в большинстве
&lt;abbr title="Платное программное обеспечение с закрытым кодом"&gt;проприетарных&lt;/abbr&gt;
программ и заключается в нагромождении максимального количества
функционала внутри одного программного продукта, в большинстве случаев с
целью получения дополнительных возможностей для построения рекламной
компании и, как следствие, более выгодного ведения продаж. К сожалению,
при таком подходе разработчики часто забывают о качестве ПО, о
возможностях расширение, удобстве использования, возможностях
модификации со стороны пользователя и многом другом, но зато в итоге
получают продукт, о котором можно указать "установил - и сразу что-то
как-то работает", но что именно, как оно работает, и как долго еще
сможет работать до тех пор пока не начнутся неполадки, и как с ними
бороться в случае если они появятся - остается загадкой для как для
подавляющего большинства пользователей, так и не редко для самих
разработчиков тоже.&lt;/p&gt;
&lt;p&gt;Закончив лирическое отступление, хочется взглянуть на нашу философию с
точки зрения программиста.&lt;/p&gt;
&lt;h3 id="vzgliad-s-tochki-zreniia-programmista"&gt;Взгляд с точки зрения программиста&lt;/h3&gt;
&lt;p&gt;Философия &lt;a href="/tag/unix/"&gt;Unix&lt;/a&gt; предлагает программисту набор элементарных
правил, соблюдение которых не только упростит работу программиста, но и
позволит расширить сферу применения получившегося программного продукта
с помощью различных вариантов интеграции с другими программами.&lt;/p&gt;
&lt;p&gt;Как же это выглядит?&lt;/p&gt;
&lt;h4&gt;Одна задача - одна программа&lt;/h4&gt;
&lt;p&gt;С помощью этого правила список действий, требуемых от программиста для
написания готовой программы, резко сокращается до двух позиций, одной из
которых является собственно реализация задачи. Задачи эти чаще всего
элементарны до безобразия и заключается в переработки входных данных,
например: вывод содержимого указанного каталога, подсчет длины
указанного файла, фильтрация входных данных, отправка локального
электронного письма на удаленный сервер (да-да, для приема, сортировки,
хранения, чтения, редактирования и отправки электронных писем могут
использоваться отдельные программы).&lt;/p&gt;
&lt;p&gt;Подобное множество программ решающих элементарные задачи делает
количество способов решения какой-либо комплексной задачи стремящимся к
бесконечности, ведь при наличии стандартизованного интерфейса
комбинировать программы можно в любой последовательности. Для расширения
возможностей такого рода комбинирования используются различные
скриптовые языки, которых существует достаточно много, наиболее
распространенным из которых являются bash скрипты, основанные на
командах одноименной оболочки командной строки, используемой
по-умолчанию во всех (хотя возможно стоило не использовать громких слов
и написать "в большинстве") дистрибутивах &lt;a href="/tag/linux/"&gt;Linux&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Unix pipes&lt;/h4&gt;
&lt;p&gt;Этот механизм является основным способом реализации столько раз
упоминавшегося выше интерфейса между элементарными программами.
Реализация его поддержки является как раз второй задачей, которая
ставится перед программистом, идущим по пути &lt;a href="/tag/unix/"&gt;Unix&lt;/a&gt;. С
использованием большинства языков программирования она является
тривиальной, особенно это справедливо для C.&lt;/p&gt;
&lt;p&gt;На подробностях реализации останавливаться не будем, по этому позволю
себе плавно перейти к следующему разделу и продолжить эту тему уже там.&lt;/p&gt;
&lt;h3 id="vzgliad-s-tochki-zreniia-polzovatelia"&gt;Взгляд с точки зрения пользователя&lt;/h3&gt;
&lt;p&gt;Слово pipes можно переводить по-разному, мне больше нравится вариант
&lt;em&gt;потоки&lt;/em&gt;, но также часто используется и дословный перевод - &lt;em&gt;трубы&lt;/em&gt;.
Также имеет смысл сразу сказать, что его реализация полностью
основывается на командной строке и командах различных ее оболочек, а
также тесно интегрирована с устройствами компьютера и файловой системой.&lt;/p&gt;
&lt;p&gt;У каждой элементарной программы, соответствующей этой идеологии, должен
быть входной и выходной стандартные текстовые потоки - &lt;strong&gt;stdin&lt;/strong&gt; и &lt;strong&gt;stdout&lt;/strong&gt; соответственно. Механизм unix pipes позволяет перенаправлять эти потоки любой программы произвольным образом с помощью трех простых операторов: &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;/code&gt;. Первый из них - &lt;code&gt;|&lt;/code&gt; перенаправляет stdout команды слева от него в stdin команды справа, а &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;/code&gt; предназначены для перенаправление потоков в/из файлы по схожему принципу.&lt;/p&gt;
&lt;p&gt;Предлагаю рассмотреть этот механизм на примерах. Возьмем несколько
базовых утилит, имеющихся на практически любой unix-like системе:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat&lt;/code&gt; - вывод содержимого указанного первым параметром файла в
    stdout (по умолчанию stdout в большинстве программ направляется в
    консоль)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;less&lt;/code&gt; - постраничный вывод текста, полученного в stdin в stdout
    (переключение страниц и некоторые другие функции производятся с
    клавиатуры, возможны и другие варианты использования, но они нам не
    нужны)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep&lt;/code&gt; - построчная фильтрация текста, полученного в stdin, вывод
    только строк, содержащих текст, указанный первым аргументом, и вывод
    результата в stdout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Начнем с примера, позволяющего прочитать постранично любой файл:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat readme.txt &lt;span class="p"&gt;|&lt;/span&gt; less
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Не смотря на наличие более простых методов достижения той же цели, этот
пример наглядно демонстрирует процесс перенаправления ввода-вывода,
другими словами с помощью оператора &lt;code&gt;|&lt;/code&gt; была создана так называемая pipe,
которая и дала название этому механизму. Пример, демонстрирующий
перенаправление в файл будет столь же элементарным, хотя может быть с
первого взгляда покажется "пострашнее":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat readme.txt &lt;span class="p"&gt;|&lt;/span&gt; grep unix &amp;gt; readme.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Этот пример должен был бы удалить из файла все строки, где нет слова
"unix". &lt;em&gt;Маленькое замечание:&lt;/em&gt; при использовании такого перенаправления,
перед началом передачи данных файл обнуляется. В этом и заключается
ошибка данного примера: файл очищается до того, как поток данных успел
пройти через фильтрацию &lt;strong&gt;grep&lt;/strong&gt;, что приводит к просто очистке файла.
Если же Вам все же нужен отфильтрованный список строк - стоит разместить
в другом файле (которым можно было бы подменить исходный при
необходимости), просто поменяв его название:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat readme.txt &lt;span class="p"&gt;|&lt;/span&gt; grep unix &amp;gt; meread.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Если же Вы хотите избежать очищения файла, в который производится
запись, необходимо написать символ &lt;code&gt;&amp;gt;&lt;/code&gt; дважды, тогда новые данные
припишутся в конец:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat readme.txt &lt;span class="p"&gt;|&lt;/span&gt; grep unix &amp;gt;&amp;gt; readme.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В unix-like системах есть еще одна интересная особенность, косвенно
связанная с этим механизмом: &lt;em&gt;все устройства являются файлами&lt;/em&gt; и
соответственно, прикреплены к файловой системе, для них выделена
отдельная директория, по традиции называемая &lt;code&gt;/dev&lt;/code&gt;. Работа с ними также
ведется на тех же правах что и с обычными файлами, например набрав в
консоли:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat readme.txt &amp;gt; /dev/dsp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;в ответ от компьютера Вы услышите некоторый звук, издаваемый из колонок
или наушников.&lt;/p&gt;
&lt;h4&gt;Подводим итоги&lt;/h4&gt;
&lt;p&gt;С точки зрения простого пользователя использование opensource решений,
построенных на базе философии unix, является как минимум нетривиальной
задачей - ведь от него требуется как минимум понимание насколько мощная
и гибкая система попала ему/ей в руки. Отсутствие единственного верного
способа решения той или иной задачи ставит большинство людей попросту в
тупик, у них начинают разбегаться глаза от десятков тысяч программ,
доступа к которым есть у всех пользователей unix-like операционных
систем, с помощью набора простой волшебной команды в консоли, состоящей
не более чем из трех-четырех слов.&lt;/p&gt;
&lt;p&gt;Но если пользователь находит в себе силы понять что за зверь попал ему в
руки, он сможет превратить любой компьютер в универсальное устройство по
решению любых задач именно тем способом, который удобен &lt;em&gt;пользователю&lt;/em&gt;,
а не который навязали ему &lt;em&gt;производители&lt;/em&gt;
&lt;abbr title="Платное программное обеспечение с закрытым кодом"&gt;проприетарного&lt;/abbr&gt;
програмного обеспечения.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Иван Блинков</dc:creator><pubDate>Sun, 06 Jan 2008 19:30:00 +0300</pubDate><guid>tag:www.insight-it.ru,2008-01-06:linux/2008/unix-way/</guid><category>Linux</category><category>opensource</category><category>Unix</category><category>Unix way</category><category>идеология</category><category>Программирование</category><category>программное обеспечение</category><category>философия</category></item></channel></rss>